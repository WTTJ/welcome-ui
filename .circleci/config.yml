version: 2.1

orbs:
  aws-cli: circleci/aws-cli@4.1.3
  aws-s3: circleci/aws-s3@4.0.0

parameters:
  cache_version:
    type: string
    default: v6
  nodejs_base_image:
    type: string
    default: 'cimg/node:20.17.0'

executors:
  nodejs:
    docker:
      - image: << pipeline.parameters.nodejs_base_image >>
  docker_builder:
    resource_class: medium
    machine:
      image: ubuntu-2204:current

default: &default
  working_directory: /home/circleci/welcome-ui

checkout: &checkout
  checkout:
    path: /home/circleci/welcome-ui

restore_repo: &restore_repo
  restore_cache:
    keys:
      - << pipeline.parameters.cache_version >>-source-{{ .Branch }}-{{ .Revision }}

restore_node_modules: &restore_node_modules
  restore_cache:
    keys:
      - << pipeline.parameters.cache_version >>-yarn-{{ checksum "/home/circleci/welcome-ui/yarn.lock" }}

jobs:
  checkout:
    <<: *default
    executor: nodejs
    steps:
      - *checkout
      - *restore_node_modules
      - run:
          name: Run yarn install and save node modules
          command: yarn install
      - save_cache:
          key: << pipeline.parameters.cache_version >>-yarn-{{ checksum "/home/circleci/welcome-ui/yarn.lock" }}
          paths:
            - ~/.cache/yarn
            - ~/welcome-ui/node_modules
            - ~/welcome-ui/lib/node_modules
            - ~/welcome-ui/website/node_modules

  vulnerabilities_yarn:
    <<: *default
    executor: nodejs
    resource_class: small
    steps:
      - *checkout
      - *restore_node_modules
      - attach_workspace:
          at: ~/welcome-ui
      - run:
          name: Critical vulnerabilities (yarn audit)
          command: yarn check:audit

  build:
    <<: *default
    executor: nodejs
    resource_class: medium
    steps:
      - *checkout
      - *restore_node_modules
      - run: yarn build
      - persist_to_workspace:
          root: ~/welcome-ui
          paths:
            - lib/dist

  lint:
    <<: *default
    executor: nodejs
    steps:
      - *checkout
      - *restore_node_modules
      - attach_workspace:
          at: ~/welcome-ui
      - run: yarn lint

  test:
    <<: *default
    executor: nodejs
    parallelism: 4
    steps:
      - *checkout
      - *restore_node_modules
      - attach_workspace:
          at: ~/welcome-ui
      - run: cd lib && yarn jest --detectOpenHandles $(circleci tests glob "./**/*.test.{ts,js,tsx}" | circleci tests split | xargs)

  release_icon_font:
    <<: *default
    executor: nodejs
    steps:
      - *checkout
      - *restore_repo
      - *restore_node_modules
      - attach_workspace:
          at: ~/welcome-ui
      - run:
          name: Prepare font hash
          command: |
            echo "export ICON_FONT_HASH=$(sha1sum lib/src/components/IconsFont/fonts/welcome-icon-font.woff2 | awk '{ print $1 }')" >> $BASH_ENV
            source $BASH_ENV
      - aws-cli/setup:
          aws_access_key_id: AWS_ACCESS_KEY_ID
          aws_secret_access_key: AWS_SECRET_ACCESS_KEY
          region: ${AWS_REGION}
      - aws-s3/sync:
          from: lib/src/components/IconsFont/fonts
          to: s3://welcome-ui/public/fonts/icon-font/$ICON_FONT_HASH
          arguments: |
            --cache-control "public, max-age=31536000" --exclude "*" --include "welcome-icon-font.woff" --include "welcome-icon-font.woff2" --metadata GitCommit=$CIRCLE_SHA1 --delete
      - aws-s3/sync:
          from: lib/src/components/IconsFont/fonts
          to: s3://wttj-production/fonts/icon-font/$ICON_FONT_HASH
          arguments: |
            --cache-control "public, max-age=31536000" --exclude "*" --include "welcome-icon-font.woff" --include "welcome-icon-font.woff2" --metadata GitCommit=$CIRCLE_SHA1 --delete

  # current version build (common to previews & prod)
  website_build:
    <<: *default
    executor: nodejs
    steps:
      - *checkout
      - *restore_node_modules
      - attach_workspace:
          at: ~/welcome-ui
      - run: yarn build:website
      - persist_to_workspace:
          root: ~/welcome-ui
          paths:
            - website/out

  # current version deploy for previews
  website_deploy_preview:
    <<: *default
    executor: nodejs
    steps:
      - *checkout
      - *restore_node_modules
      - attach_workspace:
          at: ~/welcome-ui
      - aws-cli/setup:
          aws_access_key_id: AWS_ACCESS_KEY_ID
          aws_secret_access_key: AWS_SECRET_ACCESS_KEY
          region: ${AWS_REGION}
      - run:
          name: Process branch name
          command: |
            echo "export PROCESSED_BRANCH=$(echo "$CIRCLE_BRANCH" | sed "s/[^[:alnum:]-]/-/g" | tr '[:upper:]' '[:lower:]' | cut -c -63)" >> $BASH_ENV
      - aws-s3/sync:
          from: website/out
          to: s3://welcome-ui/preview/${PROCESSED_BRANCH}

  # current version deploy for production
  website_deploy_prod:
    <<: *default
    executor: nodejs
    steps:
      - *checkout
      - *restore_node_modules
      - attach_workspace:
          at: ~/welcome-ui
      - aws-cli/setup:
          aws_access_key_id: AWS_ACCESS_KEY_ID
          aws_secret_access_key: AWS_SECRET_ACCESS_KEY
          region: ${AWS_REGION}
      - aws-s3/sync:
          from: website/out
          to: s3://welcome-ui/docs_production
          arguments: |
            --metadata GitCommit=$CIRCLE_SHA1

  # previous versions build & deploy for production
  previous_website_versions_build_deploy_prod:
    <<: *default
    executor: nodejs
    steps:
      - *checkout
      - *restore_node_modules
      - attach_workspace:
          at: ~/welcome-ui
      - run:
          name: build w/ prefix
          command: VERSION=$CIRCLE_BRANCH yarn build:website
      - aws-cli/setup:
          aws_access_key_id: AWS_ACCESS_KEY_ID
          aws_secret_access_key: AWS_SECRET_ACCESS_KEY
          region: ${AWS_REGION}
      - aws-s3/sync:
          from: website/out
          to: s3://welcome-ui/docs_production/$CIRCLE_BRANCH
          arguments: |
            --metadata GitCommit=$CIRCLE_SHA1 --delete

  release:
    executor: nodejs
    steps:
      - *checkout
      - *restore_repo
      - attach_workspace:
          at: ~/welcome-ui/artifacts
      - run:
          name: 'copy build artifacts'
          command: 'cp -r artifacts/* .'
      - run:
          name: 'auth to npm registry'
          command: echo "//npm.pkg.github.com/:_authToken=$GITHUB_TOKEN_WRITE_PACKAGES" > ~/.npmrc
      - run:
          name: publish
          command: yarn release-it --no-increment --no-git --no-github

  dev_release:
    executor: nodejs
    steps:
      - *checkout
      - *restore_repo
      - attach_workspace:
          at: ~/welcome-ui/artifacts
      - run:
          name: 'copy build artifacts'
          command: 'cp -r artifacts/* .'
      - run:
          name: 'auth to npm registry'
          command: echo "//npm.pkg.github.com/:_authToken=$GITHUB_TOKEN_WRITE_PACKAGES" > ~/.npmrc
      - run:
          name: publish
          command: node .dev-releases/publish.mjs

workflows:
  btd:
    jobs:
      - checkout:
          filters:
            tags:
              only: /.*/
      - vulnerabilities_yarn:
          filters:
            tags:
              only: /.*/
          requires:
            - checkout
      - build:
          filters:
            tags:
              only: /.*/
          requires:
            - checkout
      - lint:
          filters:
            tags:
              only: /.*/
          requires:
            - build
      - test:
          filters:
            tags:
              only: /.*/
          requires:
            - build
      - release_icon_font:
          filters:
            tags:
              only: /.*/
          context:
            - aws
          requires:
            - build
      - website_build:
          filters:
            tags:
              only: /.*/
          requires:
            - build
      - website_deploy_preview:
          context:
            - aws
            - welcome-ui
          requires:
            - lint
            - test
            - website_build
            - release_icon_font
      - website_deploy_prod:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v7.(\d\d|\d).(\d\d|\d)/
          context:
            - aws
            - welcome-ui
          requires:
            - lint
            - test
            - website_build
            - release_icon_font
      - previous_website_versions_build_deploy_prod:
          filters:
            # should add branches here to keep previous doc version of future majors
            branches:
              only: /v3|v4|v5|v6/
          context:
            - aws
            - welcome-ui
          requires:
            - lint
            - test
            - website_build
            - release_icon_font
      - release:
          context:
            - welcome-ui
          requires:
            - lint
            - test
            - website_build
            - release_icon_font
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v\d.(\d\d|\d).(\d\d|\d)/
      - dev_release:
          context:
            - welcome-ui
          requires:
            - lint
            - test
            - website_build
            - release_icon_font
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /dev..*/
