defaults: &defaults
  working_directory: ~/welcome-ui
  docker:
    - image: cimg/node:16.13.1

version: 2.1

parameters:
  cache_version:
    type: string
    default: v3

orbs:
  aws-s3: circleci/aws-s3@2.0.0

jobs:
  checkout:
    <<: *defaults
    steps:
      - checkout
      - save_cache:
          key: << pipeline.parameters.cache_version >>-welcome-ui-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/welcome-ui

  yarn_install:
    <<: *defaults
    steps:
      - restore_cache:
          key: << pipeline.parameters.cache_version >>-welcome-ui-{{ .Environment.CIRCLE_SHA1 }}
      - run: yarn install
      - store_artifacts:
          path: yarn.lock
      - persist_to_workspace:
          root: ~/welcome-ui
          paths:
            - node_modules

  lint:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/welcome-ui
      - restore_cache:
          key: << pipeline.parameters.cache_version >>-welcome-ui-{{ .Environment.CIRCLE_SHA1 }}
      - run: yarn lint

  test:
    <<: *defaults
    parallelism: 4
    steps:
      - attach_workspace:
          at: ~/welcome-ui
      - restore_cache:
          key: << pipeline.parameters.cache_version >>-welcome-ui-{{ .Environment.CIRCLE_SHA1 }}
      - run: yarn jest --detectOpenHandles $(circleci tests glob "./packages/**/*.test.{ts,js,tsx}" | circleci tests split | xargs)

  vulnerabilities_yarn:
    <<: *defaults
    docker:
      - image: cimg/node:16.16.0
    steps:
      - attach_workspace:
          at: ~/welcome-ui
      - restore_cache:
          key: << pipeline.parameters.cache_version >>-welcome-ui-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Critical vulnerabilities test (yarn audit)
          command: yarn check:audit

  build_and_release_icon_font:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/welcome-ui
      - restore_cache:
          key: << pipeline.parameters.cache_version >>-welcome-ui-{{ .Environment.CIRCLE_SHA1 }}
      - run: yarn icons:collect --force
      - run: yarn webfont:build
      - run:
          name: prepare font hash
          command: |
            if [[ -z "$CIRCLE_BRANCH" ]]; then
              echo 'export BRANCH=master' >> $BASH_ENV
            else
              echo 'export BRANCH=$CIRCLE_BRANCH' >> $BASH_ENV
            fi
            echo "export ICON_FONT_HASH=$(sha1sum packages/IconFont/fonts/welcome-icon-font-2.woff | awk '{ print $1 }')" >> $BASH_ENV
            source $BASH_ENV
            yarn build:core
      - aws-s3/sync:
          from: packages/IconFont/fonts
          to: s3://welcome-ui/public/fonts/$BRANCH/$ICON_FONT_HASH/
          arguments: |
            --metadata GitCommit=$CIRCLE_SHA1 --delete

  build:
    <<: *defaults
    resource_class: large
    steps:
      - attach_workspace:
          at: ~/welcome-ui
      - restore_cache:
          key: << pipeline.parameters.cache_version >>-welcome-ui-{{ .Environment.CIRCLE_SHA1 }}
      - run: yarn icons:build
      - run: yarn build
      - persist_to_workspace:
          root: ~/welcome-ui
          paths:
            - packages/**/dist
            - packages/Themes/**/dist
            - icons/dist
            - packages/IconFont/fonts

  # current version build (common to previews & prod)
  docs_build:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/welcome-ui
      - restore_cache:
          key: << pipeline.parameters.cache_version >>-welcome-ui-{{ .Environment.CIRCLE_SHA1 }}
      - run: yarn docs:build
      - persist_to_workspace:
          root: ~/welcome-ui
          paths:
            - docs/out

  # current version deploy for previews
  docs_deploy_preview:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/welcome-ui
      - restore_cache:
          key: << pipeline.parameters.cache_version >>-welcome-ui-{{ .Environment.CIRCLE_SHA1 }}
      - run: node_modules/.bin/netlify deploy --dir=docs/out --alias $CIRCLE_BRANCH

  # current version deploy for production
  docs_deploy_prod:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/welcome-ui
      - restore_cache:
          key: << pipeline.parameters.cache_version >>-welcome-ui-{{ .Environment.CIRCLE_SHA1 }}
      - aws-s3/sync:
          from: docs/out
          to: s3://welcome-ui/docs_production
          arguments: |
            --metadata GitCommit=$CIRCLE_SHA1
      - aws-s3/sync:
          from: s3://welcome-ui/docs_production
          to: docs_production
      - run: node_modules/.bin/netlify deploy --dir=docs_production --prod

  # previous versions build & deploy for production
  previous_docs_versions_build_deploy_prod:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/welcome-ui
      - restore_cache:
          key: << pipeline.parameters.cache_version >>-welcome-ui-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: build w/ prefix
          command: VERSION=$CIRCLE_BRANCH yarn docs:build
      - aws-s3/sync:
          from: docs/out
          to: s3://welcome-ui/docs_production/$CIRCLE_BRANCH
          arguments: |
            --metadata GitCommit=$CIRCLE_SHA1 --delete
      - aws-s3/sync:
          from: s3://welcome-ui/docs_production
          to: docs_production
      - run: node_modules/.bin/netlify deploy --dir=docs_production --prod

  release:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/welcome-ui
      - restore_cache:
          key: << pipeline.parameters.cache_version >>-welcome-ui-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: login to registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
      - run:
          name: release to npm
          command: yarn lerna publish from-git --yes --no-verify-access

  prerelease:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/welcome-ui
      - restore_cache:
          key: << pipeline.parameters.cache_version >>-welcome-ui-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: login to registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
      - run:
          name: release to npm
          command: yarn lerna publish from-git --yes --no-verify-access --dist-tag next

workflows:
  version: 2
  btd:
    jobs:
      - checkout:
          filters:
            tags:
              only: /.*/
      - vulnerabilities_yarn:
          requires:
            - checkout
      - yarn_install:
          filters:
            tags:
              only: /.*/
          requires:
            - vulnerabilities_yarn
      - build_and_release_icon_font:
          context:
            - aws
          requires:
            - lint
            - test
      - build:
          filters:
            tags:
              only: /.*/
          requires:
            - yarn_install
      - lint:
          filters:
            tags:
              only: /.*/
          requires:
            - yarn_install
            - build
      - test:
          filters:
            tags:
              only: /.*/
          requires:
            - yarn_install
            - build
      - docs_build:
          filters:
            tags:
              only: /^v5.0.0-alpha.*/
          requires:
            - build
      - docs_deploy_prod:
          context:
            - aws
            - netlify
            - welcome-ui
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v5.0.0-alpha.*/
          requires:
            - test
            - lint
            - docs_build
      - docs_deploy_preview:
          context:
            - netlify
            - welcome-ui
          requires:
            - test
            - lint
            - docs_build
      - previous_docs_versions_build_deploy_prod:
          context:
            - aws
            - netlify
            - welcome-ui
          filters:
            # should add branches here to keep previous doc version of future majors
            branches:
              only: /v3|v4/
          requires:
            - test
            - lint
            - build
      - release:
          context:
            - welcome-ui
          requires:
            - test
            - lint
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v\d.\d.\d/

      - prerelease:
          context:
            - welcome-ui
          requires:
            - test
            - lint
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v\d.\d.\d-.*/
