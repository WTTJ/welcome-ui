// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Unified Migration > migrates external styled components (styles.ts + Component.tsx) > external-component.tsx 1`] = `
"import React from "react";
import { MenuIcon } from "welcome-ui-new/Icon";
import { Text } from "welcome-ui-new/Text";
import "./styles.scss";
type TopNavOptions = {
  children?: React.ReactNode;
  title: JSX.Element | string;
};
type TopNavProps = TopNavOptions;
export const TopNav: React.FC<TopNavProps> = ({
  children,
  title,
  ...props
}) => {
  const { isMobile, setIsExpanded } = {
    isMobile: true,
    setIsExpanded: (_) => {},
  };
  const handleClickExpand = () => {
    setIsExpanded(true);
  };
  return (
    <header {...props} className="top-nav">
      {isMobile ? (
        <section className="top-nav-mobile-section">
          <button onClick={handleClickExpand} className="menu-button">
            <MenuIcon />
          </button>
          <Text className="ml-sm text-h4" variant="h5">
            {title}
          </Text>
        </section>
      ) : null}
      {children ? <ul className="top-nav-list">{children}</ul> : null}
    </header>
  );
};
"
`;

exports[`Unified Migration > migrates external styled components (styles.ts + Component.tsx) > external-styles.scss 1`] = `
".top-nav {
  position: sticky;
  top: 0;
  background-color: neutral-10;
  z-index: 1;
}

.top-nav-list {
  padding: 0 var(--spacing-lg);
  margin: 0;
  display: flex;
  align-items: center;
  overflow-x: auto;
  height:;
  border-bottom: 1px solid;
  border-color: neutral-30;
}

.top-nav-list-item {
  list-style: none;
  min-width: auto;
}

.top-nav-link {
  display: inline-flex;
  align-items: center;
  color: beige-70;
  padding: var(--spacing-sm);
  border-radius: var(--spacing-md);
  cursor: pointer;
  margin-right: var(--spacing-sm);
  text-decoration: none;
  transition: background-color 300ms;
  white-space: nowrap;
  font-size: var(--spacing-sm);

  &[aria-current="page"] {
    color: neutral-90;
    background-color: beige-30;
  }

  &:hover {
    color: beige-80;
    background-color: beige-20;
  }
}

.top-nav-mobile-section {
  height:;
  display: flex;
  align-items: center;
  background-color: beige-20;
  padding: 0 var(--spacing-md);
}

.menu-button {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 48px;
  width: 48px;
  border: none;
  border-radius: var(--spacing-md);
  cursor: pointer;
  color: beige-70;
  background-color: inherit;
  transition:
    color 300ms,
    background-color 300ms;

  &:hover {
    color: beige-80;
    background-color: beige-30;
  }

  &:active {
    color: neutral-90;
  }
}
"
`;

exports[`Unified Migration > migrates files with BOTH external and inline components in the SAME file > same-file-component.tsx 1`] = `
"import { Box } from "welcome-ui-old/Box";
import { Text } from "welcome-ui-new/Text";
import "./styles.scss";
export const MixedComponent = () => {
  return (
    <div>
      {/* External styled component */}
      <header className="top-nav">
        <button className="menu-button">Menu</button>
      </header>

      {/* Inline styled component */}
      <div className="bg-primary-500 flex mt-lg">
        <Text className="text-dark-90 text-sm">
          Mixed component with both S.* and Box components
        </Text>
      </div>
    </div>
  );
};
"
`;

exports[`Unified Migration > migrates files with BOTH external and inline components in the SAME file > same-file-styles.scss 1`] = `
".top-nav {
  background-color: primary-500;
  padding: var(--spacing-lg);
}

.menu-button {
  color: white;
  border: none;
}
"
`;

exports[`Unified Migration > migrates inline styled components (Box, Stack, etc.) > inline-component.tsx 1`] = `
"import { Breadcrumb } from "../../../../lib/src/old/components/Breadcrumb";

// Usage examples
export const Example = () => {
  return (
    <Breadcrumb className="mb-lg" separator=">">
      <Breadcrumb.Item className="mb-xl" href="/">
        Introduction
      </Breadcrumb.Item>
      <Breadcrumb.Item className="mb-xl">Disabled</Breadcrumb.Item>
      <Breadcrumb.Item className="mb-xl">Breadcrumb</Breadcrumb.Item>
    </Breadcrumb>
  );
};
"
`;

exports[`Unified Migration > migrates mixed components (both external + inline) > mixed-external-component.tsx 1`] = `
"import React from "react";
import { MenuIcon } from "welcome-ui-new/Icon";
import { Text } from "welcome-ui-new/Text";
import "./styles.scss";
type TopNavOptions = {
  children?: React.ReactNode;
  title: JSX.Element | string;
};
type TopNavProps = TopNavOptions;
export const TopNav: React.FC<TopNavProps> = ({
  children,
  title,
  ...props
}) => {
  const { isMobile, setIsExpanded } = {
    isMobile: true,
    setIsExpanded: (_) => {},
  };
  const handleClickExpand = () => {
    setIsExpanded(true);
  };
  return (
    <header {...props} className="top-nav">
      {isMobile ? (
        <section className="top-nav-mobile-section">
          <button onClick={handleClickExpand} className="menu-button">
            <MenuIcon />
          </button>
          <Text className="ml-sm text-h4" variant="h5">
            {title}
          </Text>
        </section>
      ) : null}
      {children ? <ul className="top-nav-list">{children}</ul> : null}
    </header>
  );
};
"
`;

exports[`Unified Migration > migrates mixed components (both external + inline) > mixed-inline-component.tsx 1`] = `
"import { Breadcrumb } from "../../../../lib/src/old/components/Breadcrumb";

// Usage examples
export const Example = () => {
  return (
    <Breadcrumb className="mb-lg" separator=">">
      <Breadcrumb.Item className="mb-xl" href="/">
        Introduction
      </Breadcrumb.Item>
      <Breadcrumb.Item className="mb-xl">Disabled</Breadcrumb.Item>
      <Breadcrumb.Item className="mb-xl">Breadcrumb</Breadcrumb.Item>
    </Breadcrumb>
  );
};
"
`;

exports[`Unified Migration > migrates mixed components (both external + inline) > mixed-styles.scss 1`] = `
".top-nav {
  position: sticky;
  top: 0;
  background-color: neutral-10;
  z-index: 1;
}

.top-nav-list {
  padding: 0 var(--spacing-lg);
  margin: 0;
  display: flex;
  align-items: center;
  overflow-x: auto;
  height:;
  border-bottom: 1px solid;
  border-color: neutral-30;
}

.top-nav-list-item {
  list-style: none;
  min-width: auto;
}

.top-nav-link {
  display: inline-flex;
  align-items: center;
  color: beige-70;
  padding: var(--spacing-sm);
  border-radius: var(--spacing-md);
  cursor: pointer;
  margin-right: var(--spacing-sm);
  text-decoration: none;
  transition: background-color 300ms;
  white-space: nowrap;
  font-size: var(--spacing-sm);

  &[aria-current="page"] {
    color: neutral-90;
    background-color: beige-30;
  }

  &:hover {
    color: beige-80;
    background-color: beige-20;
  }
}

.top-nav-mobile-section {
  height:;
  display: flex;
  align-items: center;
  background-color: beige-20;
  padding: 0 var(--spacing-md);
}

.menu-button {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 48px;
  width: 48px;
  border: none;
  border-radius: var(--spacing-md);
  cursor: pointer;
  color: beige-70;
  background-color: inherit;
  transition:
    color 300ms,
    background-color 300ms;

  &:hover {
    color: beige-80;
    background-color: beige-30;
  }

  &:active {
    color: neutral-90;
  }
}
"
`;
