// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Unified Migration > migrates comprehensive mixed components (external + inline in same file) > same-file-component.tsx 1`] = `
"import { Alert } from "../../../lib/src/old/components/Alert";
import { AspectRatio } from "../../../lib/src/old/components/AspectRatio";
import { Badge } from "../../../lib/src/old/components/Badge";
import { Box } from "../../../lib/src/old/components/Box";
import { Breadcrumb } from "../../../lib/src/old/components/Breadcrumb";
import { Button } from "../../../lib/src/old/components/Button";
import { ButtonGroup } from "../../../lib/src/old/components/ButtonGroup";
import { CloseButton } from "../../../lib/src/old/components/CloseButton";
import { Field } from "../../../lib/src/old/components/Field";
import { Grid } from "../../../lib/src/old/components/Grid";
import { MenuIcon } from "../../../lib/src/old/components/Icon";
import { InputText } from "../../../lib/src/old/components/InputText";
import { Label } from "../../../lib/src/old/components/Label";
import { Link } from "../../../lib/src/old/components/Link";
import { Stack } from "../../../lib/src/old/components/Stack";
import { Text } from "../../../lib/src/old/components/Text";
import { Textarea } from "../../../lib/src/old/components/Textarea";
import { Toggle } from "../../../lib/src/old/components/Toggle";
import "./styles.scss";
const FormattedMessage = ({
  defaultMessage,
  id,
}: {
  defaultMessage: string;
  id: string;
}): React.ReactNode => <span id={id}>{defaultMessage}</span>;
const register = (name: string, options?: object) => {
  return {
    name,
    ...options,
  };
};
const SIGN_IN_PATH = "/signin";
const FALSE = false;
const TRUE = true;
// eslint-disable-next-line no-console
const ON_CLICK = () => console.debug("submit");
export const MixedComponent = ({
  children,
  ...rest
}: {
  children: React.ReactNode;
}) => {
  return (
    <div>
      {/* External styled components */}
      <header {...rest} className="top-nav">
        {TRUE ? (
          <section className="top-nav-mobile-section">
            <button onClick={ON_CLICK} className="menu-button">
              <MenuIcon />
            </button>
            <Text className="ml-sm text-h4" variant="h5">
              Title
            </Text>
          </section>
        ) : null}
        {children ? <ul className="top-nav-list">{children}</ul> : null}
      </header>

      {/* Mixed inline styled components from Component1.tsx */}
      <aside className="bg-beige-20 flex-col grow h-max-content items-center justify-center lg:px-3xl md:px-xl max-w-[30rem] md:flex none min-h-full pb-xl w-40%">
        <Link as={Button} to={SIGN_IN_PATH}>
          <Text className="mt-md text-h3" as="h1" variant="h4">
            <FormattedMessage defaultMessage="Terms of use" id="EBDrtq" />
          </Text>
        </Link>
        <Text className="mt-auto text-center text-dark-50 text-sm" as="span">
          <FormattedMessage
            defaultMessage="Â© 2024 Acme Corp. All rights reserved."
            id="8XKXo+"
          />
        </Text>
      </aside>

      <div className="grid" columns={2} gutter="sm"></div>
      <div className="flex flex-1 flex-col gap-xxl"></div>
      <div className="flex flex-row gap-xxs items-center"></div>

      <Alert
        className="mb-lg"
        actions={
          <>
            <Alert.Button mb="sm">
              <FormattedMessage
                defaultMessage="Please sign in with provider"
                id="5nmpcx"
              />
            </Alert.Button>
            <Alert.SecondaryButton mb="sm">
              <FormattedMessage
                defaultMessage="Please sign in with provider"
                id="5nmpcx"
              />
            </Alert.SecondaryButton>
          </>
        }
        isFullWidth
        variant="danger"
      >
        <Alert.Title className="mb-sm">
          <FormattedMessage
            defaultMessage="Please sign in with provider"
            id="5nmpcx"
          />
        </Alert.Title>
        <span>
          <FormattedMessage
            defaultMessage="Your organization enforces provider sign-in. Contact your administrator if you need help."
            id="TzKv+W"
          />
        </span>
      </Alert>

      <AspectRatio className="flex-1 max-w-full md:max-w-[8rem]">
        <img
          className="rounded-md"
          alt="video_thumbnail"
          loading="lazy"
          src="https://via.placeholder.com/160"
        />
      </AspectRatio>

      <Badge className="ml-sm" size="sm" variant="primary">
        14
      </Badge>

      <Breadcrumb className="mb-lg" separator=">">
        <Breadcrumb.Item className="mb-xl" href="/">
          Introduction
        </Breadcrumb.Item>
        <Breadcrumb.Item className="mb-xl">Disabled</Breadcrumb.Item>
        <Breadcrumb.Item className="mb-xl">Breadcrumb</Breadcrumb.Item>
      </Breadcrumb>

      <ButtonGroup>
        <Button
          data-testid="my-draft-button"
          disabled={FALSE}
          onClick={ON_CLICK}
          size="sm"
        >
          Published
        </Button>
      </ButtonGroup>

      <CloseButton className="bg-neutral-90 border-none" />

      <form>
        <Field
          className="my-lg"
          error="my error message"
          label="Email"
          required
        >
          <Label className="items-center mb-sm" required={FALSE}></Label>
          <InputText
            autoFocus
            dataTestId="wa-forgot-input-email"
            name="email"
            {...register("email", {
              pattern: "This field has invalid format",
              required: "This field is required",
              value: /fish/,
            })}
          />
        </Field>
        <Textarea
          className="mt-md"
          name="i18n_description_en"
          {...register("i18n_description_en")}
        />

        <Toggle
          className="inline-flex"
          checked={FALSE}
          onClick={() => console.debug()}
          {...register("email", {
            pattern: "This field has invalid format",
            required: "This field is required",
            value: /fish/,
          })}
        />

        <Button
          className="mt-xxl w-full"
          as="a"
          dataTestId="my-button-1"
          to={SIGN_IN_PATH}
        >
          <FormattedMessage defaultMessage="Back to Sign in" id="D7hbFB" />
        </Button>
        {/* eslint-disable-next-line no-console */}
        <Button
          dataTestId="my-button-2"
          onClick={() => console.debug("submit")}
          type="submit"
        >
          <FormattedMessage defaultMessage="Back to Sign in" id="D7hbFB" />
        </Button>
      </form>
    </div>
  );
};
"
`;

exports[`Unified Migration > migrates comprehensive mixed components (external + inline in same file) > same-file-styles.scss 1`] = `
".top-nav {
  position: sticky;
  top: 0;
  background-color: neutral-10;
  z-index: 1;
}

.top-nav-list {
  padding: 0 var(--spacing-lg);
  margin: 0;
  display: flex;
  align-items: center;
  overflow-x: auto;
  height:;
  border-bottom: 1px solid;
  border-color: neutral-30;
}

.top-nav-list-item {
  list-style: none;
  min-width: auto;
}

.top-nav-link {
  display: inline-flex;
  align-items: center;
  color: beige-70;
  padding: var(--spacing-sm);
  border-radius: var(--spacing-md);
  cursor: pointer;
  margin-right: var(--spacing-sm);
  text-decoration: none;
  transition: background-color 300ms;
  white-space: nowrap;
  font-size: var(--spacing-sm);

  &[aria-current="page"] {
    color: neutral-90;
    background-color: beige-30;
  }

  &:hover {
    color: beige-80;
    background-color: beige-20;
  }
}

.top-nav-mobile-section {
  height:;
  display: flex;
  align-items: center;
  background-color: beige-20;
  padding: 0 var(--spacing-md);
}

.menu-button {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 48px;
  width: 48px;
  border: none;
  border-radius: var(--spacing-md);
  cursor: pointer;
  color: beige-70;
  background-color: inherit;
  transition:
    color 300ms,
    background-color 300ms;

  &:hover {
    color: beige-80;
    background-color: beige-30;
  }

  &:active {
    color: neutral-90;
  }
}
"
`;
