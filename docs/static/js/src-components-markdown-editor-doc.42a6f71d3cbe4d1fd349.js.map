{"version":3,"sources":["webpack:///./src/common/styles/form.js","webpack:///./src/utils/propTypes.js","webpack:///./src/components/MarkdownEditor/styles.js","webpack:///./src/components/MarkdownEditor/index.js","webpack:///./src/components/MarkdownEditor/doc.mdx","webpack:///./src/utils/variants.js"],"names":["__webpack_require__","d","__webpack_exports__","fieldTypeStyles","styled_components__WEBPACK_IMPORTED_MODULE_0__","_theme_helpers__WEBPACK_IMPORTED_MODULE_1__","_utils_variants__WEBPACK_IMPORTED_MODULE_2__","css","props","fieldType","getCss","get","getVariantStateColor","variant","shape","name","string","isRequired","error","oneOfType","array","warnings","submitFailed","bool","touched","func","number","StyledMarkdownEditor","styled","div","withConfig","componentId","disabled","focused","StyledSimpleMDE","SimpleMDE","MarkdownEditor","autoFocus","_props$showIcons","showIcons","_props$hideIcons","hideIcons","toolbar","placeholder","value","onBlur","onFocus","onChange","_useState2","_slicedToArray","useState","setFocused","react_default","a","createElement","className","events","blur","focus","extraKeys","Tab","target","preventDefault","options","autofocus","tabSize","spellChecker","concat","_toConsumableArray","MDXContent","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","layout","React","Component","_this$props","components","_objectWithoutProperties","dist","id","parentName","href","docz_styled","__codesandbox","__position","__code","__scope","Playground","MarkdownEditor_MarkdownEditor","console","debug","label","index_m","of","getVariant","warning","variantStateColors","info","variantColor","variantColors","_objectSpread","blue","default","green","orange","pink","primary","purple","red","secondary","turquoize","yellow","getVariantColor"],"mappings":"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","file":"static/js/src-components-markdown-editor-doc.5c71adf8.js","sourcesContent":["import { css } from 'styled-components'\n\nimport { get, getCss } from '../../theme/helpers'\nimport { getVariantStateColor } from '../../utils/variants'\n\nexport const fieldTypeStyles = css`\n  ${props =>\n    props.fieldType === 'radioTab' ? getCss('fields.radiotabs.default') : getCss('fields.default')};\n  width: 100%;\n  padding: ${get('space.md')} ${get('space.sm')};\n  border-color: ${props => getVariantStateColor(props.variant)};\n  transition: ${get('transitions.medium')};\n\n  &::placeholder {\n    ${getCss('fields.placeholder')};\n  }\n\n  &:focus {\n    ${getCss('fields.focused')};\n  }\n\n  &[disabled] {\n    ${getCss('fields.disabled')};\n  }\n`\n","import { array, bool, func, number, oneOfType, shape, string } from 'prop-types'\n\nexport const reduxFormFieldPropTypes = {\n  input: shape({\n    name: string.isRequired\n  }).isRequired,\n  meta: shape({\n    error: oneOfType([string, array]),\n    warnings: oneOfType([string, array]),\n    submitFailed: bool.isRequired,\n    touched: bool.isRequired\n  })\n}\n\nexport const formFieldPropTypes = {\n  onBlur: func,\n  onChange: func,\n  onFocus: func,\n  value: oneOfType([string, number]),\n  required: bool,\n  autoFocus: bool\n}\n\nexport const formFieldDefaultProps = {\n  classList: [],\n  inlineHint: null,\n  label: null,\n  placeholder: null,\n  required: false,\n  autoFocus: false\n}\n","import styled, { css } from 'styled-components'\nimport SimpleMDE from 'react-simplemde-editor'\n\nimport { get, getCss } from '../../theme/helpers'\nimport { fieldTypeStyles } from '../../common/styles/form'\n\nexport const StyledMarkdownEditor = styled.div(\n  props => css`\n    position: relative;\n    pointer-events: ${props.disabled && 'none'};\n    ${fieldTypeStyles};\n    ${props.focused && getCss('fields.focused')};\n    ${props.disabled && getCss('fields.disabled')};\n    padding: 0;\n\n    .editor-toolbar {\n      border: 0 none;\n      padding: ${get('space.xs')} ${get('space.xs')};\n      opacity: 1;\n      background-color: ${get('colors.light.100')};\n      border-bottom: ${get('borderWidths.sm')} solid ${get('colors.nude.200')};\n      position: sticky;\n      top: 0;\n      z-index: 2;\n      box-shadow: ${get('boxShadows.sm')};\n\n      &::before,\n      &::after {\n        content: none;\n      }\n\n      button {\n        ${getCss('fields.mde.icons')};\n        height: 2rem;\n        width: 2rem;\n        line-height: 2rem;\n        text-align: center;\n\n        &::before {\n          line-height: inherit;\n        }\n      }\n\n      i.separator {\n        color: transparent;\n        border-left: 0 none;\n        border-right: 1px solid ${get('colors.nude.200')};\n      }\n    }\n\n    .editor-statusbar {\n      display: none;\n    }\n\n    .CodeMirror {\n      border: none;\n      background: inherit;\n    }\n\n    .cm-strong {\n      font-weight: ${get('fontWeights.bold')};\n    }\n  `\n)\n\nexport const StyledSimpleMDE = styled(SimpleMDE)``\n","import React, { useState } from 'react'\nimport { arrayOf, bool, func, node, oneOfType, string } from 'prop-types'\nimport 'easymde/dist/easymde.min.css'\n\nimport { formFieldPropTypes } from '../../utils/propTypes'\n\nimport { StyledMarkdownEditor, StyledSimpleMDE } from './styles'\n\nexport const MarkdownEditor = props => {\n  const {\n    autoFocus,\n    showIcons = [],\n    hideIcons = [],\n    toolbar,\n    placeholder,\n    variant,\n    disabled,\n    value,\n    onBlur,\n    onFocus,\n    onChange\n  } = props\n\n  const [focused, setFocused] = useState(autoFocus || false)\n\n  const handleFocus = () => {\n    onFocus && onFocus()\n    setFocused(true)\n  }\n\n  const handleBlur = () => {\n    onBlur && onBlur()\n    setFocused(false)\n  }\n\n  const handleChange = () => {\n    // Create dummy event as expected by onChange (Final Form et al)\n    onChange && onChange({ target: { name, value }, preventDefault: () => {} })\n  }\n\n  return (\n    <StyledMarkdownEditor disabled={disabled} focused={focused} variant={variant}>\n      <StyledSimpleMDE\n        className=\"simple-md-editor-wrapper\"\n        events={{ blur: handleBlur, focus: handleFocus }}\n        extraKeys={{\n          Tab: false // Prevent tab from indenting (and creating code block)\n        }}\n        onChange={handleChange}\n        options={{\n          autofocus: autoFocus,\n          placeholder,\n          toolbar,\n          tabSize: 4,\n          spellChecker: false,\n          showIcons,\n          hideIcons: [...hideIcons, 'image', 'heading', 'fullscreen', 'side-by-side']\n        }}\n      />\n    </StyledMarkdownEditor>\n  )\n}\n\nMarkdownEditor.propTypes = {\n  ...formFieldPropTypes,\n  autoFocus: func,\n  disabled: bool,\n  hideIcons: arrayOf(string),\n  placeholder: oneOfType([string, node]),\n  showIcons: arrayOf(string),\n  toolbar: arrayOf(string)\n}\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { PropsTable } from 'docz'\nimport { Playground } from '../../../docz.styled'\nimport { MarkdownEditor } from './index'\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"markdowneditor\"}}>{`MarkdownEditor`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`We use library `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://github.com/RIP21/react-simplemde-editor\"}}>{`react-simplemde-editor`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"example\"}}>{`Example`}</MDXTag>\n<Playground __codesandbox={`undefined`} __position={0} __code={'<MarkdownEditor\\n  name=\\\"description\\\"\\n  fieldType=\\\"mde\\\"\\n  value=\\\"Something happening\\\"\\n  onChange={console.debug}\\n  placeholder=\\\"Placeholder\\\"\\n  label=\\\"Markdown editor example\\\"\\n/>'} __scope={{props: this ? this.props : props,Playground,MarkdownEditor}}>\n  <MarkdownEditor\n    name=\"description\"\n    fieldType=\"mde\"\n    value=\"Something happening\"\n    onChange={console.debug}\n    placeholder=\"Placeholder\"\n    label=\"Markdown editor example\"\n  />\n</Playground>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"properties\"}}>{`Properties`}</MDXTag>\n<PropsTable of={MarkdownEditor} />\n           </MDXTag>\n  }\n}\n  ","import { get } from '../theme/helpers'\n\nexport const getVariant = (warning, error) => {\n  if (error) return 'error'\n  if (warning) return 'warning'\n  return undefined\n}\n\nconst variantStateColors = {\n  error: 'colors.danger.500',\n  warning: 'colors.warning.500',\n  info: 'colors.info.500'\n}\n\nexport const getVariantStateColor = variant => {\n  const variantColor = variantStateColors[variant]\n  return variantColor ? get(variantColor) : null\n}\n\nconst variantColors = {\n  blue: 'colors.sub.blue',\n  default: 'colors.nude.300',\n  green: 'colors.sub.green',\n  orange: 'colors.sub.orange',\n  pink: 'colors.sub.pink',\n  primary: 'colors.primary.500',\n  purple: 'colors.sub.purple',\n  red: 'colors.sub.red',\n  secondary: 'colors.secondary.500',\n  turquoize: 'colors.sub.turquoize',\n  yellow: 'colors.sub.yellow',\n  ...variantStateColors\n}\n\nexport const getVariantColor = variant => {\n  const variantColor = variantColors[variant]\n  return variantColor ? get(variantColor) : null\n}\n"],"sourceRoot":""}