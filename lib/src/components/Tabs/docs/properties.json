{
  "TabComponent": {
    "props": {
      "className": {
        "defaultValue": null,
        "description": "",
        "name": "className",
        "parent": {
          "fileName": "welcome-ui/node_modules/@types/react/index.d.ts",
          "name": "HTMLAttributes"
        },
        "declarations": [
          {
            "fileName": "welcome-ui/node_modules/@types/react/index.d.ts",
            "name": "HTMLAttributes"
          },
          {
            "fileName": "welcome-ui/lib/src/components/Tabs/types.ts",
            "name": "TabOptions"
          }
        ],
        "required": false,
        "type": {
          "name": "any"
        }
      },
      "combobox": {
        "defaultValue": null,
        "description": "A reference to a [combobox\nstore](https://ariakit.org/reference/use-combobox-store). This is\nautomatically set when rendering tabs inside a\n[Combobox](https://ariakit.org/components/combobox).\n\nLive examples:\n- [Combobox with Tabs](https://ariakit.org/examples/combobox-tabs)",
        "name": "combobox",
        "parent": {
          "fileName": "welcome-ui/node_modules/@ariakit/react-core/esm/tab/tab-store.d.ts",
          "name": "TabStoreOptions"
        },
        "declarations": [
          {
            "fileName": "welcome-ui/node_modules/@ariakit/react-core/esm/tab/tab-store.d.ts",
            "name": "TabStoreOptions"
          }
        ],
        "required": false,
        "type": {
          "name": "ComboboxStore<ComboboxStoreSelectedValue>"
        }
      },
      "composite": {
        "defaultValue": null,
        "description": "A reference to another [composite\nstore](https://ariakit.org/reference/use-composite-store). This is\nautomatically set when rendering tabs as part of another composite widget,\nsuch as [Combobox](https://ariakit.org/components/combobox) or\n[Select](https://ariakit.org/components/select).\n\nLive examples:\n- [Combobox with Tabs](https://ariakit.org/examples/combobox-tabs)",
        "name": "composite",
        "parent": {
          "fileName": "welcome-ui/node_modules/@ariakit/react-core/esm/tab/tab-store.d.ts",
          "name": "TabStoreOptions"
        },
        "declarations": [
          {
            "fileName": "welcome-ui/node_modules/@ariakit/react-core/esm/tab/tab-store.d.ts",
            "name": "TabStoreOptions"
          }
        ],
        "required": false,
        "type": {
          "name": "CompositeStore<CompositeStoreItem>"
        }
      },
      "defaultActiveId": {
        "defaultValue": null,
        "description": "The composite item id that should be active by default when the composite\nwidget is rendered. If `null`, the composite element itself will have focus\nand users will be able to navigate to it using arrow keys. If `undefined`,\nthe first enabled item will be focused.",
        "name": "defaultActiveId",
        "parent": {
          "fileName": "welcome-ui/node_modules/@ariakit/core/esm/composite/composite-store.d.ts",
          "name": "CompositeStoreOptions"
        },
        "declarations": [
          {
            "fileName": "welcome-ui/node_modules/@ariakit/core/esm/composite/composite-store.d.ts",
            "name": "CompositeStoreOptions"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "defaultItems": {
        "defaultValue": {
          "value": "[]"
        },
        "description": "The defaut value for the\n[`items`](https://ariakit.org/reference/collection-provider#items) state.",
        "name": "defaultItems",
        "parent": {
          "fileName": "welcome-ui/node_modules/@ariakit/core/esm/collection/collection-store.d.ts",
          "name": "CollectionStoreOptions"
        },
        "declarations": [
          {
            "fileName": "welcome-ui/node_modules/@ariakit/core/esm/collection/collection-store.d.ts",
            "name": "CollectionStoreOptions"
          }
        ],
        "required": false,
        "type": {
          "name": "TabStoreItem[]"
        }
      },
      "defaultSelectedId": {
        "defaultValue": null,
        "description": "The id of the tab whose panel is currently visible. If it's `undefined`, it\nwill be automatically set to the first enabled tab.\n\nLive examples:\n- [Combobox with Tabs](https://ariakit.org/examples/combobox-tabs)\n- [Animated TabPanel](https://ariakit.org/examples/tab-panel-animated)\n- [Select with Combobox and\n  Tabs](https://ariakit.org/examples/select-combobox-tab)",
        "name": "defaultSelectedId",
        "parent": {
          "fileName": "welcome-ui/node_modules/@ariakit/core/esm/tab/tab-store.d.ts",
          "name": "TabStoreOptions"
        },
        "declarations": [
          {
            "fileName": "welcome-ui/node_modules/@ariakit/core/esm/tab/tab-store.d.ts",
            "name": "TabStoreOptions"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "id": {
        "defaultValue": null,
        "description": "The ID of the composite store is used to reference elements within the\ncomposite widget before hydration. If not provided, a random ID will be\ngenerated.",
        "name": "id",
        "parent": {
          "fileName": "welcome-ui/node_modules/@types/react/index.d.ts",
          "name": "HTMLAttributes"
        },
        "declarations": [
          {
            "fileName": "welcome-ui/node_modules/@types/react/index.d.ts",
            "name": "HTMLAttributes"
          },
          {
            "fileName": "welcome-ui/lib/src/components/Tabs/types.ts",
            "name": "TabOptions"
          },
          {
            "fileName": "welcome-ui/node_modules/@ariakit/core/esm/composite/composite-store.d.ts",
            "name": "CompositeStoreState"
          }
        ],
        "required": false,
        "type": {
          "name": "any"
        }
      },
      "setActiveId": {
        "defaultValue": null,
        "description": "A callback that gets called when the\n[`activeId`](https://ariakit.org/reference/composite-provider#activeid)\nstate changes.",
        "name": "setActiveId",
        "parent": {
          "fileName": "welcome-ui/node_modules/@ariakit/react-core/esm/composite/composite-store.d.ts",
          "name": "CompositeStoreOptions"
        },
        "declarations": [
          {
            "fileName": "welcome-ui/node_modules/@ariakit/react-core/esm/composite/composite-store.d.ts",
            "name": "CompositeStoreOptions"
          }
        ],
        "required": false,
        "type": {
          "name": "(activeId: string) => void"
        }
      },
      "setItems": {
        "defaultValue": null,
        "description": "A callback that gets called when the\n[`items`](https://ariakit.org/reference/collection-provider#items) state\nchanges.\n@example const [items, setItems] = useState([]);\nconst collection = useCollectionStore({ items, setItems });",
        "name": "setItems",
        "parent": {
          "fileName": "welcome-ui/node_modules/@ariakit/react-core/esm/collection/collection-store.d.ts",
          "name": "CollectionStoreOptions"
        },
        "declarations": [
          {
            "fileName": "welcome-ui/node_modules/@ariakit/react-core/esm/collection/collection-store.d.ts",
            "name": "CollectionStoreOptions"
          }
        ],
        "required": false,
        "type": {
          "name": "BivariantCallback<(items: TabStoreItem[]) => void>"
        }
      },
      "setSelectedId": {
        "defaultValue": null,
        "description": "Function that will be called when the\n[`selectedId`](https://ariakit.org/reference/tab-provider#selectedid) state\nchanges.\n\nLive examples:\n- [Combobox with Tabs](https://ariakit.org/examples/combobox-tabs)\n- [Select with Combobox and\n  Tabs](https://ariakit.org/examples/select-combobox-tab)",
        "name": "setSelectedId",
        "parent": {
          "fileName": "welcome-ui/node_modules/@ariakit/react-core/esm/tab/tab-store.d.ts",
          "name": "TabStoreOptions"
        },
        "declarations": [
          {
            "fileName": "welcome-ui/node_modules/@ariakit/react-core/esm/tab/tab-store.d.ts",
            "name": "TabStoreOptions"
          }
        ],
        "required": false,
        "type": {
          "name": "(selectedId: string) => void"
        }
      },
      "size": {
        "defaultValue": null,
        "description": "",
        "name": "size",
        "parent": {
          "fileName": "welcome-ui/lib/src/components/Tabs/types.ts",
          "name": "TabOptions"
        },
        "declarations": [
          {
            "fileName": "welcome-ui/lib/src/components/Tabs/types.ts",
            "name": "TabOptions"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "Size",
          "value": [
            {
              "value": "\"md\""
            },
            {
              "value": "\"sm\""
            }
          ]
        }
      },
      "store": {
        "defaultValue": null,
        "description": "Another store object that will be kept in sync with the original store.\n\nLive examples:\n- [Navigation Menubar](https://ariakit.org/examples/menubar-navigation)",
        "name": "store",
        "parent": {
          "fileName": "welcome-ui/lib/src/components/Tabs/types.ts",
          "name": "TabOptions"
        },
        "declarations": [
          {
            "fileName": "welcome-ui/lib/src/components/Tabs/types.ts",
            "name": "TabOptions"
          },
          {
            "fileName": "welcome-ui/node_modules/@ariakit/core/esm/utils/store.d.ts",
            "name": "StoreProps"
          }
        ],
        "required": false,
        "type": {
          "name": "TabStore & Store<Partial<TabStoreState>>"
        }
      }
    }
  },
  "Tab": {
    "props": {
      "className": {
        "defaultValue": null,
        "description": "",
        "name": "className",
        "parent": {
          "fileName": "welcome-ui/node_modules/@types/react/index.d.ts",
          "name": "HTMLAttributes"
        },
        "declarations": [
          {
            "fileName": "welcome-ui/node_modules/@types/react/index.d.ts",
            "name": "HTMLAttributes"
          },
          {
            "fileName": "welcome-ui/lib/src/components/Tabs/types.ts",
            "name": "TabOptions"
          }
        ],
        "required": false,
        "type": {
          "name": "any"
        }
      },
      "combobox": {
        "defaultValue": null,
        "description": "A reference to a [combobox\nstore](https://ariakit.org/reference/use-combobox-store). This is\nautomatically set when rendering tabs inside a\n[Combobox](https://ariakit.org/components/combobox).\n\nLive examples:\n- [Combobox with Tabs](https://ariakit.org/examples/combobox-tabs)",
        "name": "combobox",
        "parent": {
          "fileName": "welcome-ui/node_modules/@ariakit/react-core/esm/tab/tab-store.d.ts",
          "name": "TabStoreOptions"
        },
        "declarations": [
          {
            "fileName": "welcome-ui/node_modules/@ariakit/react-core/esm/tab/tab-store.d.ts",
            "name": "TabStoreOptions"
          }
        ],
        "required": false,
        "type": {
          "name": "ComboboxStore<ComboboxStoreSelectedValue>"
        }
      },
      "composite": {
        "defaultValue": null,
        "description": "A reference to another [composite\nstore](https://ariakit.org/reference/use-composite-store). This is\nautomatically set when rendering tabs as part of another composite widget,\nsuch as [Combobox](https://ariakit.org/components/combobox) or\n[Select](https://ariakit.org/components/select).\n\nLive examples:\n- [Combobox with Tabs](https://ariakit.org/examples/combobox-tabs)",
        "name": "composite",
        "parent": {
          "fileName": "welcome-ui/node_modules/@ariakit/react-core/esm/tab/tab-store.d.ts",
          "name": "TabStoreOptions"
        },
        "declarations": [
          {
            "fileName": "welcome-ui/node_modules/@ariakit/react-core/esm/tab/tab-store.d.ts",
            "name": "TabStoreOptions"
          }
        ],
        "required": false,
        "type": {
          "name": "CompositeStore<CompositeStoreItem>"
        }
      },
      "defaultActiveId": {
        "defaultValue": null,
        "description": "The composite item id that should be active by default when the composite\nwidget is rendered. If `null`, the composite element itself will have focus\nand users will be able to navigate to it using arrow keys. If `undefined`,\nthe first enabled item will be focused.",
        "name": "defaultActiveId",
        "parent": {
          "fileName": "welcome-ui/node_modules/@ariakit/core/esm/composite/composite-store.d.ts",
          "name": "CompositeStoreOptions"
        },
        "declarations": [
          {
            "fileName": "welcome-ui/node_modules/@ariakit/core/esm/composite/composite-store.d.ts",
            "name": "CompositeStoreOptions"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "defaultItems": {
        "defaultValue": {
          "value": "[]"
        },
        "description": "The defaut value for the\n[`items`](https://ariakit.org/reference/collection-provider#items) state.",
        "name": "defaultItems",
        "parent": {
          "fileName": "welcome-ui/node_modules/@ariakit/core/esm/collection/collection-store.d.ts",
          "name": "CollectionStoreOptions"
        },
        "declarations": [
          {
            "fileName": "welcome-ui/node_modules/@ariakit/core/esm/collection/collection-store.d.ts",
            "name": "CollectionStoreOptions"
          }
        ],
        "required": false,
        "type": {
          "name": "TabStoreItem[]"
        }
      },
      "defaultSelectedId": {
        "defaultValue": null,
        "description": "The id of the tab whose panel is currently visible. If it's `undefined`, it\nwill be automatically set to the first enabled tab.\n\nLive examples:\n- [Combobox with Tabs](https://ariakit.org/examples/combobox-tabs)\n- [Animated TabPanel](https://ariakit.org/examples/tab-panel-animated)\n- [Select with Combobox and\n  Tabs](https://ariakit.org/examples/select-combobox-tab)",
        "name": "defaultSelectedId",
        "parent": {
          "fileName": "welcome-ui/node_modules/@ariakit/core/esm/tab/tab-store.d.ts",
          "name": "TabStoreOptions"
        },
        "declarations": [
          {
            "fileName": "welcome-ui/node_modules/@ariakit/core/esm/tab/tab-store.d.ts",
            "name": "TabStoreOptions"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "id": {
        "defaultValue": null,
        "description": "The ID of the composite store is used to reference elements within the\ncomposite widget before hydration. If not provided, a random ID will be\ngenerated.",
        "name": "id",
        "parent": {
          "fileName": "welcome-ui/node_modules/@types/react/index.d.ts",
          "name": "HTMLAttributes"
        },
        "declarations": [
          {
            "fileName": "welcome-ui/node_modules/@types/react/index.d.ts",
            "name": "HTMLAttributes"
          },
          {
            "fileName": "welcome-ui/lib/src/components/Tabs/types.ts",
            "name": "TabOptions"
          },
          {
            "fileName": "welcome-ui/node_modules/@ariakit/core/esm/composite/composite-store.d.ts",
            "name": "CompositeStoreState"
          }
        ],
        "required": false,
        "type": {
          "name": "any"
        }
      },
      "setActiveId": {
        "defaultValue": null,
        "description": "A callback that gets called when the\n[`activeId`](https://ariakit.org/reference/composite-provider#activeid)\nstate changes.",
        "name": "setActiveId",
        "parent": {
          "fileName": "welcome-ui/node_modules/@ariakit/react-core/esm/composite/composite-store.d.ts",
          "name": "CompositeStoreOptions"
        },
        "declarations": [
          {
            "fileName": "welcome-ui/node_modules/@ariakit/react-core/esm/composite/composite-store.d.ts",
            "name": "CompositeStoreOptions"
          }
        ],
        "required": false,
        "type": {
          "name": "(activeId: string) => void"
        }
      },
      "setItems": {
        "defaultValue": null,
        "description": "A callback that gets called when the\n[`items`](https://ariakit.org/reference/collection-provider#items) state\nchanges.\n@example const [items, setItems] = useState([]);\nconst collection = useCollectionStore({ items, setItems });",
        "name": "setItems",
        "parent": {
          "fileName": "welcome-ui/node_modules/@ariakit/react-core/esm/collection/collection-store.d.ts",
          "name": "CollectionStoreOptions"
        },
        "declarations": [
          {
            "fileName": "welcome-ui/node_modules/@ariakit/react-core/esm/collection/collection-store.d.ts",
            "name": "CollectionStoreOptions"
          }
        ],
        "required": false,
        "type": {
          "name": "BivariantCallback<(items: TabStoreItem[]) => void>"
        }
      },
      "setSelectedId": {
        "defaultValue": null,
        "description": "Function that will be called when the\n[`selectedId`](https://ariakit.org/reference/tab-provider#selectedid) state\nchanges.\n\nLive examples:\n- [Combobox with Tabs](https://ariakit.org/examples/combobox-tabs)\n- [Select with Combobox and\n  Tabs](https://ariakit.org/examples/select-combobox-tab)",
        "name": "setSelectedId",
        "parent": {
          "fileName": "welcome-ui/node_modules/@ariakit/react-core/esm/tab/tab-store.d.ts",
          "name": "TabStoreOptions"
        },
        "declarations": [
          {
            "fileName": "welcome-ui/node_modules/@ariakit/react-core/esm/tab/tab-store.d.ts",
            "name": "TabStoreOptions"
          }
        ],
        "required": false,
        "type": {
          "name": "(selectedId: string) => void"
        }
      },
      "size": {
        "defaultValue": null,
        "description": "",
        "name": "size",
        "parent": {
          "fileName": "welcome-ui/lib/src/components/Tabs/types.ts",
          "name": "TabOptions"
        },
        "declarations": [
          {
            "fileName": "welcome-ui/lib/src/components/Tabs/types.ts",
            "name": "TabOptions"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "Size",
          "value": [
            {
              "value": "\"md\""
            },
            {
              "value": "\"sm\""
            }
          ]
        }
      },
      "store": {
        "defaultValue": null,
        "description": "Another store object that will be kept in sync with the original store.\n\nLive examples:\n- [Navigation Menubar](https://ariakit.org/examples/menubar-navigation)",
        "name": "store",
        "parent": {
          "fileName": "welcome-ui/lib/src/components/Tabs/types.ts",
          "name": "TabOptions"
        },
        "declarations": [
          {
            "fileName": "welcome-ui/lib/src/components/Tabs/types.ts",
            "name": "TabOptions"
          },
          {
            "fileName": "welcome-ui/node_modules/@ariakit/core/esm/utils/store.d.ts",
            "name": "StoreProps"
          }
        ],
        "required": false,
        "type": {
          "name": "TabStore & Store<Partial<TabStoreState>>"
        }
      }
    }
  },
  "useTabStore": {
    "props": {
      "combobox": {
        "defaultValue": null,
        "description": "A reference to a [combobox\nstore](https://ariakit.org/reference/use-combobox-store). This is\nautomatically set when rendering tabs inside a\n[Combobox](https://ariakit.org/components/combobox).\n\nLive examples:\n- [Combobox with Tabs](https://ariakit.org/examples/combobox-tabs)",
        "name": "combobox",
        "parent": {
          "fileName": "welcome-ui/node_modules/@ariakit/react-core/esm/tab/tab-store.d.ts",
          "name": "TabStoreOptions"
        },
        "declarations": [
          {
            "fileName": "welcome-ui/node_modules/@ariakit/react-core/esm/tab/tab-store.d.ts",
            "name": "TabStoreOptions"
          }
        ],
        "required": false,
        "type": {
          "name": "ComboboxStore<ComboboxStoreSelectedValue>"
        }
      },
      "composite": {
        "defaultValue": null,
        "description": "A reference to another [composite\nstore](https://ariakit.org/reference/use-composite-store). This is\nautomatically set when rendering tabs as part of another composite widget,\nsuch as [Combobox](https://ariakit.org/components/combobox) or\n[Select](https://ariakit.org/components/select).\n\nLive examples:\n- [Combobox with Tabs](https://ariakit.org/examples/combobox-tabs)",
        "name": "composite",
        "parent": {
          "fileName": "welcome-ui/node_modules/@ariakit/react-core/esm/tab/tab-store.d.ts",
          "name": "TabStoreOptions"
        },
        "declarations": [
          {
            "fileName": "welcome-ui/node_modules/@ariakit/react-core/esm/tab/tab-store.d.ts",
            "name": "TabStoreOptions"
          }
        ],
        "required": false,
        "type": {
          "name": "CompositeStore<CompositeStoreItem>"
        }
      },
      "defaultActiveId": {
        "defaultValue": null,
        "description": "The composite item id that should be active by default when the composite\nwidget is rendered. If `null`, the composite element itself will have focus\nand users will be able to navigate to it using arrow keys. If `undefined`,\nthe first enabled item will be focused.",
        "name": "defaultActiveId",
        "parent": {
          "fileName": "welcome-ui/node_modules/@ariakit/core/esm/composite/composite-store.d.ts",
          "name": "CompositeStoreOptions"
        },
        "declarations": [
          {
            "fileName": "welcome-ui/node_modules/@ariakit/core/esm/composite/composite-store.d.ts",
            "name": "CompositeStoreOptions"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "defaultItems": {
        "defaultValue": {
          "value": "[]"
        },
        "description": "The defaut value for the\n[`items`](https://ariakit.org/reference/collection-provider#items) state.",
        "name": "defaultItems",
        "parent": {
          "fileName": "welcome-ui/node_modules/@ariakit/core/esm/collection/collection-store.d.ts",
          "name": "CollectionStoreOptions"
        },
        "declarations": [
          {
            "fileName": "welcome-ui/node_modules/@ariakit/core/esm/collection/collection-store.d.ts",
            "name": "CollectionStoreOptions"
          }
        ],
        "required": false,
        "type": {
          "name": "TabStoreItem[]"
        }
      },
      "defaultSelectedId": {
        "defaultValue": null,
        "description": "The id of the tab whose panel is currently visible. If it's `undefined`, it\nwill be automatically set to the first enabled tab.\n\nLive examples:\n- [Combobox with Tabs](https://ariakit.org/examples/combobox-tabs)\n- [Animated TabPanel](https://ariakit.org/examples/tab-panel-animated)\n- [Select with Combobox and\n  Tabs](https://ariakit.org/examples/select-combobox-tab)",
        "name": "defaultSelectedId",
        "parent": {
          "fileName": "welcome-ui/node_modules/@ariakit/core/esm/tab/tab-store.d.ts",
          "name": "TabStoreOptions"
        },
        "declarations": [
          {
            "fileName": "welcome-ui/node_modules/@ariakit/core/esm/tab/tab-store.d.ts",
            "name": "TabStoreOptions"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "setActiveId": {
        "defaultValue": null,
        "description": "A callback that gets called when the\n[`activeId`](https://ariakit.org/reference/composite-provider#activeid)\nstate changes.",
        "name": "setActiveId",
        "parent": {
          "fileName": "welcome-ui/node_modules/@ariakit/react-core/esm/composite/composite-store.d.ts",
          "name": "CompositeStoreOptions"
        },
        "declarations": [
          {
            "fileName": "welcome-ui/node_modules/@ariakit/react-core/esm/composite/composite-store.d.ts",
            "name": "CompositeStoreOptions"
          }
        ],
        "required": false,
        "type": {
          "name": "(activeId: string) => void"
        }
      },
      "setItems": {
        "defaultValue": null,
        "description": "A callback that gets called when the\n[`items`](https://ariakit.org/reference/collection-provider#items) state\nchanges.\n@example const [items, setItems] = useState([]);\nconst collection = useCollectionStore({ items, setItems });",
        "name": "setItems",
        "parent": {
          "fileName": "welcome-ui/node_modules/@ariakit/react-core/esm/collection/collection-store.d.ts",
          "name": "CollectionStoreOptions"
        },
        "declarations": [
          {
            "fileName": "welcome-ui/node_modules/@ariakit/react-core/esm/collection/collection-store.d.ts",
            "name": "CollectionStoreOptions"
          }
        ],
        "required": false,
        "type": {
          "name": "BivariantCallback<(items: TabStoreItem[]) => void>"
        }
      },
      "setSelectedId": {
        "defaultValue": null,
        "description": "Function that will be called when the\n[`selectedId`](https://ariakit.org/reference/tab-provider#selectedid) state\nchanges.\n\nLive examples:\n- [Combobox with Tabs](https://ariakit.org/examples/combobox-tabs)\n- [Select with Combobox and\n  Tabs](https://ariakit.org/examples/select-combobox-tab)",
        "name": "setSelectedId",
        "parent": {
          "fileName": "welcome-ui/node_modules/@ariakit/react-core/esm/tab/tab-store.d.ts",
          "name": "TabStoreOptions"
        },
        "declarations": [
          {
            "fileName": "welcome-ui/node_modules/@ariakit/react-core/esm/tab/tab-store.d.ts",
            "name": "TabStoreOptions"
          }
        ],
        "required": false,
        "type": {
          "name": "(selectedId: string) => void"
        }
      }
    }
  }
}