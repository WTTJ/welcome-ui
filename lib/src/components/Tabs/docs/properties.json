{
  "TabComponent": {
    "props": {
      "className": {
        "defaultValue": null,
        "description": "",
        "name": "className",
        "parent": {
          "fileName": "welcome-ui/node_modules/@types/react/index.d.ts",
          "name": "HTMLAttributes"
        },
        "declarations": [
          {
            "fileName": "welcome-ui/node_modules/@types/react/index.d.ts",
            "name": "HTMLAttributes"
          },
          {
            "fileName": "welcome-ui/lib/src/components/Tabs/types.ts",
            "name": "TabOptions"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "id": {
        "defaultValue": null,
        "description": "The ID of the composite store is used to reference elements within the\ncomposite widget before hydration. If not provided, a random ID will be\ngenerated.",
        "name": "id",
        "parent": {
          "fileName": "welcome-ui/node_modules/@types/react/index.d.ts",
          "name": "HTMLAttributes"
        },
        "declarations": [
          {
            "fileName": "welcome-ui/node_modules/@types/react/index.d.ts",
            "name": "HTMLAttributes"
          },
          {
            "fileName": "welcome-ui/lib/src/components/Tabs/types.ts",
            "name": "TabOptions"
          },
          {
            "fileName": "welcome-ui/node_modules/@ariakit/core/esm/composite/composite-store.d.ts",
            "name": "CompositeStoreState"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "size": {
        "defaultValue": null,
        "description": "",
        "name": "size",
        "parent": {
          "fileName": "welcome-ui/lib/src/components/Tabs/types.ts",
          "name": "TabOptions"
        },
        "declarations": [
          {
            "fileName": "welcome-ui/lib/src/components/Tabs/types.ts",
            "name": "TabOptions"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "Size",
          "value": [
            {
              "value": "\"md\""
            },
            {
              "value": "\"sm\""
            }
          ]
        }
      },
      "store": {
        "defaultValue": null,
        "description": "Another store object that will be kept in sync with the original store.\n\nLive examples:\n- [Navigation Menubar](https://ariakit.org/examples/menubar-navigation)",
        "name": "store",
        "parent": {
          "fileName": "welcome-ui/lib/src/components/Tabs/types.ts",
          "name": "TabOptions"
        },
        "declarations": [
          {
            "fileName": "welcome-ui/lib/src/components/Tabs/types.ts",
            "name": "TabOptions"
          },
          {
            "fileName": "welcome-ui/node_modules/@ariakit/core/esm/utils/store.d.ts",
            "name": "StoreProps"
          }
        ],
        "required": false,
        "type": {
          "name": "TabStore & Store<Partial<TabStoreState>>"
        }
      }
    }
  },
  "Tab": {
    "props": {
      "className": {
        "defaultValue": null,
        "description": "",
        "name": "className",
        "parent": {
          "fileName": "welcome-ui/node_modules/@types/react/index.d.ts",
          "name": "HTMLAttributes"
        },
        "declarations": [
          {
            "fileName": "welcome-ui/node_modules/@types/react/index.d.ts",
            "name": "HTMLAttributes"
          },
          {
            "fileName": "welcome-ui/lib/src/components/Tabs/types.ts",
            "name": "TabOptions"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "id": {
        "defaultValue": null,
        "description": "The ID of the composite store is used to reference elements within the\ncomposite widget before hydration. If not provided, a random ID will be\ngenerated.",
        "name": "id",
        "parent": {
          "fileName": "welcome-ui/node_modules/@types/react/index.d.ts",
          "name": "HTMLAttributes"
        },
        "declarations": [
          {
            "fileName": "welcome-ui/node_modules/@types/react/index.d.ts",
            "name": "HTMLAttributes"
          },
          {
            "fileName": "welcome-ui/lib/src/components/Tabs/types.ts",
            "name": "TabOptions"
          },
          {
            "fileName": "welcome-ui/node_modules/@ariakit/core/esm/composite/composite-store.d.ts",
            "name": "CompositeStoreState"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "size": {
        "defaultValue": null,
        "description": "",
        "name": "size",
        "parent": {
          "fileName": "welcome-ui/lib/src/components/Tabs/types.ts",
          "name": "TabOptions"
        },
        "declarations": [
          {
            "fileName": "welcome-ui/lib/src/components/Tabs/types.ts",
            "name": "TabOptions"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "Size",
          "value": [
            {
              "value": "\"md\""
            },
            {
              "value": "\"sm\""
            }
          ]
        }
      },
      "store": {
        "defaultValue": null,
        "description": "Another store object that will be kept in sync with the original store.\n\nLive examples:\n- [Navigation Menubar](https://ariakit.org/examples/menubar-navigation)",
        "name": "store",
        "parent": {
          "fileName": "welcome-ui/lib/src/components/Tabs/types.ts",
          "name": "TabOptions"
        },
        "declarations": [
          {
            "fileName": "welcome-ui/lib/src/components/Tabs/types.ts",
            "name": "TabOptions"
          },
          {
            "fileName": "welcome-ui/node_modules/@ariakit/core/esm/utils/store.d.ts",
            "name": "StoreProps"
          }
        ],
        "required": false,
        "type": {
          "name": "TabStore & Store<Partial<TabStoreState>>"
        }
      }
    }
  },
  "useTabStore": {
    "props": {}
  }
}