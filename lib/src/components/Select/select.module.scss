@use './../../utils/theme/text-ellipsis' as ellipsis;

@layer components {
  .indicators {
    position: absolute;
    padding: 0;
    top: 0;
    bottom: 0;
    right: var(--indicatorsRight, var(--border-radius-lg));
    display: flex;
    gap: var(--border-radius-sm);

    &.size-xs {
      --indicatorsRight: var(--border-radius-md);
    }
  }

  .dropdown-indicator {
    position: relative;
    height: 100%;
    padding: 0;
    outline: none !important; /* important for firefox */
    appearance: none;
    cursor: pointer;
    border: none;
    background: transparent;
    display: flex;
    align-items: center;
    justify-content: center;

    .styled-icon {
      transform: none;
      transition-property: transform;
      transition-duration: var(--duration-medium);
      transition-timing-function: var(--timing-primary);
    }

    &.open {
      .styled-icon {
        transform: rotate3d(0, 0, 1, 180deg);
      }
    }

    &:not(:last-child) {
      width: auto;
    }

    &:disabled {
      color: var(--color-border-warm-primary);
    }
  }

  .input-wrapper {
    position: relative;

    &:has(> .icon-placement-right) {
      .indicators {
        /* icon size + spacing */
        --indicatorsRight: calc(var(--border-radius-xl) + var(--border-radius-lg) * 2);
      }
    }
  }

  .root {
    --selectPlaceholderColor: var(--color-icon-neutral-subtle);
    background-color: var(--selectBackgroundColor, var(--color-background-neutral-inverse-fixed));
    border-color: var(--selectBorderColor, var(--color-background-neutral-subtlest));
    border-radius: var(--border-radius-sm);
    border-style: solid;
    border-width: var(--border-width-xs);
    color: var(--selectTextColor, var(--color-background-neutral-primary-fixed));
    font-size: var(--font-size-14);
    font-weight: var(--font-weight-regular);
    line-height: var(--border-radius-xl);
    outline: 2px solid var(--selectOutlineColor, transparent);
    cursor: default;
    width: 100%;
    transition-property: all;
    transition-timing-function: var(--timing-primary);
    transition-duration: var(--duration-medium);
    height: var(--selectHeight);
    padding-bottom: var(--selectPaddingBottom);
    padding-left: var(--selectPaddingLeft);
    padding-right: var(--selectPaddingRight);
    padding-top: var(--selectPaddingTop);
    @include ellipsis.text-ellipsis;

    /* left icon or both */
    &.icon-placement-left,
    &.icon-placement-both {
      padding-left: calc(
        var(--selectPaddingLeft) + var(--selectIconSize, 1rem) + var(--border-radius-md)
      );
    }

    /* is clearable or right icon */
    &.clearable,
    &.icon-placement-right,
    &.icon-placement-both {
      padding-right: calc(
        var(--selectPaddingRight) + var(--selectIconSize, 1rem) + var(--border-radius-md)
      );
    }

    /* is clearable and got a right/both icon */
    &.clearable.icon-placement-right,
    &.clearable.icon-placement-both {
      padding-right: calc(
        var(--selectPaddingRight) + (var(--selectIconSize, 1rem) + var(--border-radius-md)) * 2
      );
    }

    &:disabled {
      --selectBackgroundColor: var(--color-background-warm-stronger);
      --selectTextColor: var(--color-text-warm-tertiary);
      cursor: not-allowed;
    }

    /* hover when no variant is defined */
    &:hover:not([class*='variant']) {
      --selectBorderColor: var(--color-background-brand-primary);
    }

    /* focus when no variant is defined */
    &:focus:not([class*='variant']) {
      --selectOutlineColor: var(--color-background-brand-subtle);
      --selectBorderColor: var(--color-background-brand-primary);
    }

    &.transparent {
      --selectBorderColor: transparent;
      --selectBackgroundColor: transparent;

      &:hover {
        --selectBorderColor: var(--color-background-neutral-minimal);
      }
    }

    &::placeholder {
      color: var(--selectPlaceholderColor);
    }

    br {
      display: none;
    }

    &::before {
      content: attr(data-spacer);
      visibility: hidden;
      display: block;
      height: 0;
    }

    &:empty {
      &::after {
        content: attr(placeholder);
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        padding: inherit;
        color: var(--selectPlaceholderColor);
        @include ellipsis.text-ellipsis;
      }

      &::before {
        height: auto;
      }
    }
  }

  .variant {
    &-danger {
      --selectBorderColor: var(--color-background-danger-strongest);
      --selectOutlineColor: var(--color-background-danger-secondary);
    }

    &-success {
      --selectBorderColor: var(--color-background-accent-green-strongest);
      --selectOutlineColor: var(--color-background-accent-green-primary);
    }

    &-warning {
      --selectBorderColor: var(--color-background-warning-stronger);
      --selectOutlineColor: var(--color-background-warning-subtle);
    }
  }

  .size {
    &-lg {
      --selectHeight: var(--size-icon-2xl);
      --selectPaddingBottom: var(--border-radius-xl);
      --selectPaddingLeft: var(--border-radius-lg);
      --selectPaddingRight: var(--border-radius-lg);
      --selectPaddingTop: var(--border-radius-xl);
    }

    &-md {
      --selectHeight: var(--width-40);
      --selectPaddingBottom: var(--border-radius-lg);
      --selectPaddingLeft: var(--border-radius-lg);
      --selectPaddingRight: var(--border-radius-lg);
      --selectPaddingTop: var(--border-radius-lg);
    }

    &-sm {
      --selectHeight: var(--size-icon-xl);
      --selectPaddingBottom: var(--border-radius-md);
      --selectPaddingLeft: var(--border-radius-lg);
      --selectPaddingRight: var(--border-radius-lg);
      --selectPaddingTop: var(--border-radius-md);
    }

    &-xs {
      --selectHeight: var(--border-radius-2xl);
      --selectPaddingBottom: var(--border-radius-sm);
      --selectPaddingLeft: var(--border-radius-md);
      --selectPaddingRight: var(--border-radius-md);
      --selectPaddingTop: var(--border-radius-sm);
      --selectIconSize: 0.75rem;
    }
  }

  .icon-wrapper {
    position: absolute;
    top: 0;
    left: var(--iconPlacementLeft, auto);
    right: var(--iconPlacementRight, auto);
    bottom: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    pointer-events: none;
    transition-property: all;
    transition-timing-function: var(--timing-primary);
    transition-duration: var(--duration-medium);
    color: var(--color-background-neutral-primary-fixed);

    &.icon-placement-left {
      --iconPlacementLeft: var(--border-radius-lg);
      &.size-xs {
        --iconPlacementLeft: var(--border-radius-md);
      }
    }

    &.icon-placement-right {
      --iconPlacementRight: var(--border-radius-lg);
      &.size-xs {
        --iconPlacementRight: var(--border-radius-md);
      }
    }

    /* for button action */
    & > button {
      pointer-events: auto;
    }
  }

  .wrapper {
    position: relative;
    width: 100%;

    &.disabled .icon-wrapper {
      color: var(--color-border-warm-primary);
    }
  }

  .menu {
    max-height: 9.6875rem; /* 155px */
    background-color: var(--color-background-neutral-inverse-fixed);
    border-color: var(--color-background-neutral-subtlest);
    border-radius: var(--border-radius-sm);
    border-style: solid;
    border-width: var(--border-width-xs);
    color: var(--color-background-neutral-primary-fixed);
    font-size: var(--font-size-14);
    font-weight: var(--font-weight-regular);
    line-height: var(--border-radius-xl);
    outline: none;
    position: absolute;
    z-index: 2;
    right: 0;
    left: 0;
    margin: 0;
    margin-top: var(--border-radius-lg);
    padding: 0;
    transition-property: all;
    transition-timing-function: var(--timing-primary);
    transition-duration: var(--duration-medium);
    overflow: auto;
    -webkit-overflow-scrolling: touch;

    &:hover > * {
      cursor: pointer;
    }
  }

  .item {
    color: var(--itemTextColor, var(--color-icon-warm-tertiary));
    cursor: var(--itemCursor, default);
    padding: var(--border-radius-lg);
    list-style: none;
    text-decoration: none;
    font-size: var(--font-size-14);
    transition-property: background;
    transition-duration: var(--duration-medium);
    transition-timing-function: var(--timing-primary);
    @include ellipsis.text-ellipsis;

    &.highlighted {
      background-color: var(--color-background-warm-primary);
    }

    &.selected {
      &:not(.multiple) {
        --itemTextColor: var(--color-background-neutral-primary-fixed);
        font-weight: var(--font-weight-semi-bold);
      }
      &.multiple:not(.allowUnselectFromList) {
        --itemTextColor: var(--color-background-warm-stronger);
        --itemCursor: not-allowed;
      }
    }

    &.disabled {
      --itemTextColor: var(--color-border-warm-primary);
      --itemCursor: not-allowed;
    }
  }

  .tags {
    margin-top: var(--border-radius-xl);

    .styled-tag:not(:last-child) {
      margin-right: var(--border-radius-md);
      margin-bottom: var(--border-radius-md);
    }

    &:empty {
      display: none;
    }
  }
}
