@property --gradient-angle {
  syntax: '<angle>';
  initial-value: -60deg;
  inherits: true;
}

@keyframes rotate-gradient {
  to {
    --gradient-angle: 300deg;
  }
}

@function ai-gradient-border-background($background-color) {
  @return linear-gradient($background-color 0 0) padding-box,
    conic-gradient(
        from var(--gradient-angle) at 50% 50%,
        var(--color-green-30),
        var(--color-teal-40),
        var(--color-blue-40),
        var(--color-violet-40),
        var(--color-pink-40),
        var(--color-red-orange-40),
        var(--color-pink-40),
        var(--color-violet-40),
        var(--color-blue-40),
        var(--color-teal-40),
        var(--color-green-30)
      )
      border-box;
}

@function ai-striped-background($background-color) {
  @return repeating-linear-gradient(
      -45deg,
      var(--color-neutral-10),
      var(--color-neutral-10) 2.5px,
      $background-color 2.5px,
      $background-color 5.25px
    )
    padding-box;
}

@layer components {
  .root {
    position: relative;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    border-style: solid;
    cursor: pointer;

    /* VARIABLES FROM THEME - DONT CHANGE WITH REACT PROPS */
    border-radius: var(--border-radius-md);
    transition-property: all;
    transition-duration: var(--duration-medium);
    transition-timing-function: ease-in-out;
    outline: transparent solid var(--border-width-md);
    font-weight: var(--font-weight-semi-bold);
    font-family: var(--font-family-body);
    line-height: var(--font-line-height-xs);

    /* VARIABLES THAT CHANGE WITH REACT PROPS */
    height: var(--buttonHeight);
    padding-inline: var(--buttonPaddingInline);
    font-size: var(--buttonFontSize);
    color: var(--buttonColor, var(--color-neutral-90));
    background: var(--buttonBackground);
    border-width: var(--buttonBorderWidth, 0);
    border-color: var(--buttonBorderColor, transparent);
    box-shadow: var(--buttonBoxShadow, none);
    gap: var(--buttonGap);

    &[data-focus-visible],
    &:focus-visible {
      outline-width: var(--components-dimensions-button-border-width-focused);
      outline-color: var(--buttonOutlineColorFocus);
    }

    @media (hover: hover) and (pointer: fine) {
      &:hover:not(:disabled):not([aria-disabled]) {
        box-shadow: var(--elevation-20);
        --buttonBackground: var(--buttonBackgroundHover);
        --buttonBorderColor: var(--buttonBorderColorHover, transparent);
        --buttonColor: var(--buttonColorHover);
      }
    }

    &:active:not(:disabled):not([aria-disabled]) {
      --buttonBackground: var(--buttonBackgroundActive);
      --buttonBorderColor: var(--buttonBorderColorActive, transparent);
      --buttonColor: var(--buttonColorPressed);
    }

    &:disabled,
    &[aria-disabled] {
      --buttonBorderColor: var(--buttonBorderColorDisabled, transparent);
      --buttonColor: var(--buttonColorDisabled);
      --buttonBackground: var(--buttonBackgroundDisabled);
      cursor: not-allowed;
    }

    /* CHILDREN */

    :global(i.wui-icon-font),
    svg {
      font-weight: initial;

      width: var(--buttonIconSize);
      height: var(--buttonIconSize);
      font-size: var(--buttonIconSize);
    }

    /* Button with only icon child (SVG or icon font) gets square padding */
    &:has(svg:only-child),
    &:has(i.wui-icon-font:only-child) {
      padding-inline: var(--buttonPaddingInlineIconOnly, var(--buttonPaddingInline));
    }
  }

  .size {
    &-sm {
      --buttonFontSize: var(--font-size-14);
      --buttonHeight: var(--components-dimensions-button-size-max-height-sm);
      --buttonPaddingInline: var(--spacing-sm);
      --buttonPaddingInlineIconOnly: var(--spacing-xs);
      --buttonIconSize: var(--components-dimensions-button-size-icon-sm);
      --buttonGap: var(--components-dimensions-button-gap-content-sm);
    }

    &-md {
      --buttonFontSize: var(--font-size-14);
      --buttonHeight: var(--components-dimensions-button-size-max-height-md);
      --buttonPaddingInline: var(--spacing-md);
      --buttonPaddingInlineIconOnly: var(--spacing-sm);
      --buttonIconSize: var(--components-dimensions-button-size-icon-md);
      --buttonGap: var(--components-dimensions-button-gap-content-md);
    }

    &-lg {
      --buttonFontSize: var(--font-size-16);
      --buttonHeight: var(--components-dimensions-button-size-max-height-lg);
      --buttonPaddingInline: var(--spacing-lg);
      --buttonPaddingInlineIconOnly: var(--spacing-md);
      --buttonIconSize: var(--components-dimensions-button-size-icon-lg);
      --buttonGap: var(--components-dimensions-button-gap-content-lg);
    }
  }

  .variant {
    &-primary {
      --buttonBackground: var(--components-colors-button-color-background-primary-main-default);
      --buttonBackgroundActive: var(
        --components-colors-button-color-background-primary-main-pressed
      );
      --buttonBackgroundHover: var(--components-colors-button-color-background-primary-main-hover);
      --buttonOutlineColorFocus: var(--components-colors-button-color-border-focused);
      --buttonColorDisabled: var(--components-colors-button-color-text-primary-main-disabled);
      --buttonBackgroundDisabled: #{ai-striped-background(
          var(--components-colors-button-color-background-primary-main-disabled)
        )};
    }

    &-primary-neutral {
      --buttonBackground: var(--components-colors-button-color-background-primary-neutral-default);
      --buttonBackgroundActive: var(
        --components-colors-button-color-background-primary-neutral-pressed
      );
      --buttonBackgroundHover: var(
        --components-colors-button-color-background-primary-neutral-hover
      );
      --buttonBackgroundDisabled: #{ai-striped-background(
          var(--components-colors-button-color-background-primary-neutral-disabled)
        )};
      --buttonColor: var(--components-colors-button-color-text-primary-neutral-default);
      --buttonColorDisabled: var(--components-colors-button-color-text-primary-neutral-disabled);
      --buttonColorHover: var(--components-colors-button-color-text-primary-neutral-hover);
      --buttonColorPressed: var(--components-colors-button-color-text-primary-neutral-pressed);
      --buttonOutlineColorFocus: var(--components-colors-button-color-border-focused);
    }

    &-primary-ai {
      --buttonBackground: #{ai-gradient-border-background(
          var(--components-colors-button-color-background-primary-ai-default)
        )};
      --buttonBackgroundActive: #{ai-gradient-border-background(
          var(--components-colors-button-color-background-primary-ai-pressed)
        )};
      --buttonBackgroundHover: #{ai-gradient-border-background(
          var(--components-colors-button-color-background-primary-ai-hover)
        )};
      --buttonBackgroundDisabled:
        #{ai-striped-background(
            var(--components-colors-button-color-background-primary-ai-disabled)
          )},
        linear-gradient(
            107.75deg,
            var(--color-neutral-30) 0%,
            var(--color-neutral-50) 20%,
            var(--color-neutral-40) 40%,
            var(--color-neutral-50) 60%,
            var(--color-neutral-60) 80%,
            var(--color-neutral-50) 100%
          )
          border-box;
      --buttonBorderWidth: var(--components-dimensions-button-border-width-ai);
      --buttonColor: var(--components-colors-button-color-text-primary-ai-default);
      --buttonColorDisabled: var(--components-colors-button-color-text-primary-ai-disabled);
      --buttonColorHover: var(--components-colors-button-color-text-primary-ai-hover);
      --buttonColorPressed: var(--components-colors-button-color-text-primary-ai-pressed);
      --buttonOutlineColorFocus: var(--components-colors-button-color-border-focused);
      animation: rotate-gradient 3s linear infinite paused;

      @media (hover: hover) and (pointer: fine) {
        &:hover:not(:disabled):not([aria-disabled]) {
          animation-play-state: running;
        }
      }

      &:focus-visible {
        animation-play-state: running;
      }
    }

    &-primary-danger {
      --buttonBackground: var(--components-colors-button-color-background-primary-danger-default);
      --buttonBackgroundActive: var(
        --components-colors-button-color-background-primary-danger-pressed
      );
      --buttonBackgroundHover: var(
        --components-colors-button-color-background-primary-danger-hover
      );
      --buttonBackgroundDisabled: #{ai-striped-background(
          var(--components-colors-button-color-background-primary-danger-disabled)
        )};
      --buttonColor: var(--components-colors-button-color-text-primary-danger-default);
      --buttonColorDisabled: var(--components-colors-button-color-text-primary-danger-disabled);
      --buttonColorHover: var(--components-colors-button-color-text-primary-danger-hover);
      --buttonColorPressed: var(--components-colors-button-color-text-primary-danger-pressed);
      --buttonBorderWidth: var(--components-dimensions-button-border-width-secondary);
      --buttonOutlineColorFocus: var(--components-colors-button-color-border-focused);
    }

    &-secondary {
      --buttonBackground: var(--components-colors-button-color-background-secondary-main-default);
      --buttonBackgroundActive: var(
        --components-colors-button-color-background-secondary-main-pressed
      );
      --buttonBackgroundHover: var(
        --components-colors-button-color-background-secondary-main-hover
      );
      --buttonBackgroundDisabled: #{ai-striped-background(
          var(--components-colors-button-color-background-secondary-main-disabled)
        )};
      --buttonColor: var(--components-colors-button-color-text-secondary-main-default);
      --buttonColorDisabled: var(--components-colors-button-color-text-secondary-main-disabled);
      --buttonColorHover: var(--components-colors-button-color-text-secondary-main-hover);
      --buttonColorPressed: var(--components-colors-button-color-text-secondary-main-pressed);
      --buttonBorderWidth: var(--components-dimensions-button-border-width-secondary);
      --buttonBorderColor: var(--components-colors-button-color-border-secondary-main-default);
      --buttonBorderColorHover: var(--components-colors-button-color-border-secondary-main-hover);
      --buttonBorderColorActive: var(
        --components-colors-button-color-border-secondary-main-pressed
      );
      --buttonOutlineColorFocus: var(--components-colors-button-color-border-focused);
    }

    &-secondary-danger {
      --buttonBackground: var(--components-colors-button-color-background-secondary-danger-default);
      --buttonBackgroundActive: var(
        --components-colors-button-color-background-secondary-danger-pressed
      );
      --buttonBackgroundHover: var(
        --components-colors-button-color-background-secondary-danger-hover
      );
      --buttonBackgroundDisabled: #{ai-striped-background(
          var(--components-colors-button-color-background-secondary-danger-disabled)
        )};
      --buttonColor: var(--components-colors-button-color-text-secondary-danger-default);
      --buttonColorDisabled: var(--components-colors-button-color-text-secondary-danger-disabled);
      --buttonColorHover: var(--components-colors-button-color-text-secondary-danger-hover);
      --buttonColorPressed: var(--components-colors-button-color-text-secondary-danger-pressed);
      --buttonBorderWidth: var(--components-dimensions-button-border-width-secondary);
      --buttonBorderColor: var(--components-colors-button-color-border-secondary-danger-default);
      --buttonBorderColorHover: var(--components-colors-button-color-border-secondary-danger-hover);
      --buttonBorderColorActive: var(
        --components-colors-button-color-border-secondary-danger-pressed
      );
      --buttonOutlineColorFocus: var(--components-colors-button-color-border-focused);
    }

    &-tertiary {
      --buttonBackground: var(--components-colors-button-color-background-tertiary-main-default);
      --buttonBackgroundActive: var(
        --components-colors-button-color-background-tertiary-main-pressed
      );
      --buttonBackgroundHover: var(--components-colors-button-color-background-tertiary-main-hover);
      --buttonBackgroundDisabled: #{ai-striped-background(
          var(--components-colors-button-color-background-tertiary-main-disabled)
        )};
      --buttonColor: var(--components-colors-button-color-text-tertiary-main-default);
      --buttonColorDisabled: var(--components-colors-button-color-text-tertiary-main-disabled);
      --buttonColorHover: var(--components-colors-button-color-text-tertiary-main-hover);
      --buttonColorPressed: var(--components-colors-button-color-text-tertiary-main-pressed);
      --buttonOutlineColorFocus: var(--components-colors-button-color-border-focused);
    }

    &-tertiary-danger {
      --buttonBackground: var(--components-colors-button-color-background-tertiary-danger-default);
      --buttonBackgroundActive: var(
        --components-colors-button-color-background-tertiary-danger-pressed
      );
      --buttonBackgroundHover: var(
        --components-colors-button-color-background-tertiary-danger-hover
      );
      --buttonBackgroundDisabled: var(
        --components-colors-button-color-background-tertiary-danger-disabled
      );
      --buttonColor: var(--components-colors-button-color-text-tertiary-danger-default);
      --buttonColorDisabled: var(--components-colors-button-color-text-tertiary-danger-disabled);
      --buttonColorHover: var(--components-colors-button-color-text-tertiary-danger-hover);
      --buttonColorPressed: var(--components-colors-button-color-text-tertiary-danger-pressed);
      --buttonOutlineColorFocus: var(--components-colors-button-color-border-focused);
    }
  }

  .loader {
    display: flex;
    align-items: center;
    justify-content: center;
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    top: 0;
  }

  .loader-children {
    opacity: 0;
  }
}
