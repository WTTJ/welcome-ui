@layer components {
  .root {
    position: relative;
    padding: 0;
    cursor: pointer;
    transition: var(--duration-medium);
    overflow: hidden;
    font-size: var(--font-size-14);
    font-weight: var(--font-weight-regular);
    line-height: 1rem;
    outline: transparent solid var(--components-dimensions-checkbox-border-width-focused);
    border-radius: var(--border-radius-xs);
    border-style: solid;
    border-width: var(--border-width-xs);
    display: flex;
    align-items: center;
    justify-content: center;
    height: var(--components-dimensions-checkbox-size-container);
    width: var(--components-dimensions-checkbox-size-container);
    flex-shrink: 0;
    cursor: pointer;
    border-style: solid;
    border-width: var(--components-dimensions-checkbox-border-width-default);
    border-radius: var(--components-dimensions-checkbox-border-radius);
    outline: transparent solid var(--components-dimensions-checkbox-border-width-focused);
    transition-property: border-color, background-color, color, outline-color;
    transition-duration: var(--duration-medium);

    /* VARIABLES THAT CHANGE WITH REACT PROPS */
    color: var(--color, var(--components-colors-checkbox-color-icon-default));
    background-color: var(
      --backgroundColor,
      var(--components-colors-checkbox-color-background-unchecked-default)
    );
    border-color: var(
      --borderColor,
      var(--components-colors-checkbox-color-border-unchecked-default)
    );

    &:disabled,
    &[aria-disabled] {
      --color: var(--components-colors-checkbox-color-icon-disabled);
      --backgroundColor: var(--components-colors-checkbox-color-border-disabled);
      --borderColor: var(--components-colors-checkbox-color-border-disabled);

      cursor: not-allowed;
    }

    &:not([aria-disabled]):hover {
      --borderColor: var(
        --borderColorHover,
        var(--components-colors-checkbox-color-border-unchecked-hover)
      );
    }

    &[data-focus-visible],
    &:focus-visible {
      --borderColor: var(
        --borderColorFocused,
        var(--components-colors-checkbox-color-border-focused)
      );
      outline-color: var(
        --outlineColorFocus,
        var(--components-colors-checkbox-color-border-focused)
      );
    }

    &[aria-checked='true'] {
      &:not([aria-disabled]) {
        --backgroundColor: var(--components-colors-checkbox-color-background-checked-default);
        --borderColor: var(--components-colors-checkbox-color-background-checked-default);

        &:hover {
          --backgroundColor: var(--components-colors-checkbox-color-background-checked-hover);
          --borderColor: var(--backgroundColor);
        }
      }
    }
  }

  .variant {
    &-danger {
      --borderColor: var(--color-background-danger-strongest);
      --borderColorHover: var(--color-background-danger-strongest);
      --borderColorFocused: var(--color-background-danger-strongest);
      --outlineColorFocus: var(--color-background-danger-secondary);
    }

    &-warning {
      --borderColor: var(--color-background-warning-stronger);
      --borderColorHover: var(--color-background-warning-stronger);
      --borderColorFocused: var(--color-background-warning-stronger);
      --outlineColorFocus: var(--color-background-warning-secondary);
    }

    &-success {
      --borderColor: var(--color-background-accent-green-strongest);
      --borderColorHover: var(--color-background-accent-green-strongest);
      --borderColorFocused: var(--color-background-accent-green-strongest);
      --outlineColorFocus: var(--color-background-accent-green-primary);
    }
  }

  .indeterminate {
    &:not([aria-disabled]) {
      --backgroundColor: var(--components-colors-checkbox-color-background-checked-default);
      --borderColor: var(--components-colors-checkbox-color-background-checked-default);

      &:hover {
        --backgroundColor: var(--components-colors-checkbox-color-background-checked-hover);
        --borderColor: var(--backgroundColor);
      }
    }
  }
}
