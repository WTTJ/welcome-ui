{
  "Breadcrumb": {
    "props": {
      "gradientBackground": {
        "defaultValue": {
          "value": "neutral-10"
        },
        "description": "color from theme, add for scroll gradient on mobile",
        "name": "gradientBackground",
        "parent": {
          "fileName": "lib/src/components/Breadcrumb/index.tsx",
          "name": "BreadcrumbOptions"
        },
        "declarations": [
          {
            "fileName": "lib/src/components/Breadcrumb/index.tsx",
            "name": "BreadcrumbOptions"
          }
        ],
        "required": false,
        "type": {
          "name": "any"
        }
      },
      "lastChildNotClickable": {
        "defaultValue": {
          "value": true
        },
        "description": "set clickable or not the last child",
        "name": "lastChildNotClickable",
        "parent": {
          "fileName": "lib/src/components/Breadcrumb/index.tsx",
          "name": "BreadcrumbOptions"
        },
        "declarations": [
          {
            "fileName": "lib/src/components/Breadcrumb/index.tsx",
            "name": "BreadcrumbOptions"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "boolean",
          "value": [
            {
              "value": "false"
            },
            {
              "value": "true"
            }
          ]
        }
      },
      "separator": {
        "defaultValue": {
          "value": "<RightIcon size=\"xs\" />"
        },
        "description": "",
        "name": "separator",
        "parent": {
          "fileName": "lib/src/components/Breadcrumb/index.tsx",
          "name": "BreadcrumbOptions"
        },
        "declarations": [
          {
            "fileName": "lib/src/components/Breadcrumb/index.tsx",
            "name": "BreadcrumbOptions"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "ReactNode",
          "value": [
            {
              "value": "string"
            },
            {
              "value": "number"
            },
            {
              "value": "false"
            },
            {
              "value": "true"
            },
            {
              "value": "ReactElement<any, string | JSXElementConstructor<any>>",
              "description": "Represents a JSX element.\n\nWhere {@link ReactNode} represents everything that can be rendered, `ReactElement`\nonly represents JSX.",
              "fullComment": "Represents a JSX element.\n\nWhere {@link ReactNode} represents everything that can be rendered, `ReactElement`\nonly represents JSX.\n@template P The type of the props object\n@template T The type of the component or tag\n@example ```tsx\nconst element: ReactElement = <div />;\n```",
              "tags": {
                "template": "P The type of the props object\nT The type of the component or tag",
                "example": "```tsx\nconst element: ReactElement = <div />;\n```"
              }
            },
            {
              "value": "Iterable<ReactNode>",
              "description": "",
              "fullComment": "",
              "tags": {}
            },
            {
              "value": "ReactPortal",
              "description": "",
              "fullComment": "",
              "tags": {}
            }
          ]
        }
      }
    }
  }
}