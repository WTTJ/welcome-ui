@layer components {
  .input-text-wrapper {
    position: relative;
    width: 100%;
    /* Set --inputTextWrapperWidth if you need to edit the input width */
    width: var(--inputTextWrapperWidth, 100%);
  }

  .root {
    border-radius: var(--components-dimensions-input-padding-block-sm);
    border-style: solid;
    border-width: var(--components-dimensions-input-border-width-default);
    font-size: var(--font-size-14);
    font-weight: var(--font-weight-regular);
    line-height: var(--components-dimensions-input-size-image);
    outline: transparent solid var(--components-dimensions-input-border-width-focused);
    width: 100%;
    transition: var(--duration-medium);
    appearance: none;

    /* VARIABLES THAT CHANGE WITH REACT PROPS */
    background-color: var(--backgroundColor, var(--components-colors-input-color-background-default));
    color: var(--color, var(--components-colors-input-color-icon-placeholder));
    border-color: var(--borderColor, var(--components-colors-input-color-border-hover));
    height: var(--height);
    padding-inline: var(--paddingInline);
    padding-block: var(--paddingBlock);

    &:disabled,
    &[aria-disabled] {
      --backgroundColor: var(--components-colors-input-color-border-disabled);
      --color: var(--color-icon-warm-tertiary);
      cursor: not-allowed;
    }

    &:hover {
      --borderColor: var(--borderColorHover, var(--color-background-neutral-subtle));
    }

    &[data-focus-visible],
    &:focus-visible {
      --borderColor: var(--borderColorFocused, var(--components-colors-input-color-border-active));
      outline-color: var(--outlineColorFocus, var(--color-background-brand-subtle));
    }

    &::placeholder {
      --color: var(--color-icon-neutral-subtle);
    }
  }

  .variant {
    &-danger {
      --borderColor: var(--components-colors-input-password-strenght-color-background-too-weak);
      --borderColorHover: var(--components-colors-input-password-strenght-color-background-too-weak);
      --borderColorFocused: var(--components-colors-input-password-strenght-color-background-too-weak);
      --outlineColorFocus: var(--color-background-danger-secondary);
    }

    &-warning {
      --borderColor: var(--components-colors-input-password-strenght-color-background-weak);
      --borderColorHover: var(--components-colors-input-password-strenght-color-background-weak);
      --borderColorFocused: var(--components-colors-input-password-strenght-color-background-weak);
      --outlineColorFocus: var(--color-background-warning-secondary);
    }

    &-success {
      --borderColor: var(--components-colors-input-color-border-success);
      --borderColorHover: var(--components-colors-input-color-border-success);
      --borderColorFocused: var(--components-colors-input-color-border-success);
      --outlineColorFocus: var(--color-background-accent-green-primary);
    }
  }

  .placement {
    &-left.size {
      &-xs {
        padding-left: 1.75rem;
      }
      &-sm,
      &-md,
      &-lg {
        padding-left: 2.25rem;
      }
    }

    &-right.size {
      &-xs {
        padding-right: 1.75rem;
      }
      &-sm,
      &-md,
      &-lg {
        padding-right: 2.25rem;
      }
    }
  }

  .transparent {
    --borderColor: transparent;
    --backgroundColor: transparent;
    --borderColorHover: var(--components-colors-input-password-strenght-color-background-default);
  }

  .size {
    &-xs {
      --height: var(--border-radius-2xl);
      --paddingBlock: var(--components-dimensions-input-padding-block-sm);
      --paddingInline: var(--components-dimensions-input-padding-inline-sm);
    }

    &-sm {
      --height: var(--size-icon-2xl);
      --paddingBlock: var(--components-dimensions-input-padding-inline-sm);
      --paddingInline: var(--components-dimensions-input-padding-inline-md);
    }

    &-md {
      --height: var(--height-40);
      --paddingBlock: var(--components-dimensions-input-padding-inline-md);
      --paddingInline: var(--components-dimensions-input-padding-inline-md);
    }

    &-lg {
      --height: var(--size-icon-3xl);
      --paddingBlock: var(--components-dimensions-input-size-image);
      --paddingInline: var(--components-dimensions-input-padding-inline-md);
    }
  }

  .clearable {
    padding-right: var(--border-radius-2xl);
  }

  .icon-wrapper {
    position: absolute;
    top: 0;
    bottom: 0;
    left: var(--left);
    right: var(--right);
    display: flex;
    justify-content: center;
    align-items: center;
    pointer-events: none;
    transition: var(--duration-medium);
    transition-timing-function: var(--timing-primary);
    color: var(--components-colors-input-color-icon-placeholder);
    gap: var(--components-dimensions-input-padding-block-sm);

    --left: auto;
    --right: auto;

    /* for button action */
    & > button {
      pointer-events: auto;
    }
  }

  .icon-placement {
    &-left {
      &-xs {
        --left: var(--components-dimensions-input-padding-inline-sm);
      }

      &-sm {
        --left: var(--components-dimensions-input-padding-inline-md);
      }
    }

    &-right {
      &-xs {
        --right: var(--components-dimensions-input-padding-inline-sm);
      }

      &-sm {
        --right: var(--components-dimensions-input-padding-inline-md);
      }
    }
  }
}
