{
  "Pagination": {
    "props": {
      "aria-label": {
        "defaultValue": null,
        "description": "",
        "name": "aria-label",
        "parent": {
          "fileName": "welcome-ui/lib/src/components/Pagination/index.tsx",
          "name": "PaginationOptions"
        },
        "declarations": [
          {
            "fileName": "welcome-ui/lib/src/components/Pagination/index.tsx",
            "name": "PaginationOptions"
          }
        ],
        "required": true,
        "type": {
          "name": "string"
        }
      },
      "getHref": {
        "defaultValue": null,
        "description": "",
        "name": "getHref",
        "parent": {
          "fileName": "welcome-ui/lib/src/components/Pagination/index.tsx",
          "name": "PaginationOptions"
        },
        "declarations": [
          {
            "fileName": "welcome-ui/lib/src/components/Pagination/index.tsx",
            "name": "PaginationOptions"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "((page: string | number) => string)",
          "value": [
            {
              "value": "(page: string | number) => string",
              "description": "",
              "fullComment": "",
              "tags": {}
            }
          ]
        }
      },
      "leftArrow": {
        "defaultValue": null,
        "description": "",
        "name": "leftArrow",
        "parent": {
          "fileName": "welcome-ui/lib/src/components/Pagination/index.tsx",
          "name": "PaginationOptions"
        },
        "declarations": [
          {
            "fileName": "welcome-ui/lib/src/components/Pagination/index.tsx",
            "name": "PaginationOptions"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "ReactElement<any, string | JSXElementConstructor<any>>",
          "value": [
            {
              "value": "ReactElement<any, string | JSXElementConstructor<any>>",
              "description": "Represents a JSX element.\n\nWhere {@link ReactNode} represents everything that can be rendered, `ReactElement`\nonly represents JSX.",
              "fullComment": "Represents a JSX element.\n\nWhere {@link ReactNode} represents everything that can be rendered, `ReactElement`\nonly represents JSX.\n@template P The type of the props object\n@template T The type of the component or tag\n@example ```tsx\nconst element: ReactElement = <div />;\n```",
              "tags": {
                "template": "P The type of the props object\nT The type of the component or tag",
                "example": "```tsx\nconst element: ReactElement = <div />;\n```"
              }
            }
          ]
        }
      },
      "onChange": {
        "defaultValue": null,
        "description": "",
        "name": "onChange",
        "parent": {
          "fileName": "welcome-ui/lib/src/components/Pagination/index.tsx",
          "name": "PaginationOptions"
        },
        "declarations": [
          {
            "fileName": "welcome-ui/lib/src/components/Pagination/index.tsx",
            "name": "PaginationOptions"
          }
        ],
        "required": true,
        "type": {
          "name": "(page: string | number) => void"
        }
      },
      "page": {
        "defaultValue": null,
        "description": "",
        "name": "page",
        "parent": {
          "fileName": "welcome-ui/lib/src/components/Pagination/index.tsx",
          "name": "PaginationOptions"
        },
        "declarations": [
          {
            "fileName": "welcome-ui/lib/src/components/Pagination/index.tsx",
            "name": "PaginationOptions"
          }
        ],
        "required": true,
        "type": {
          "name": "number"
        }
      },
      "pageCount": {
        "defaultValue": null,
        "description": "",
        "name": "pageCount",
        "parent": {
          "fileName": "welcome-ui/lib/src/components/Pagination/index.tsx",
          "name": "PaginationOptions"
        },
        "declarations": [
          {
            "fileName": "welcome-ui/lib/src/components/Pagination/index.tsx",
            "name": "PaginationOptions"
          }
        ],
        "required": true,
        "type": {
          "name": "number"
        }
      },
      "rangeDisplay": {
        "defaultValue": {
          "value": 5
        },
        "description": "",
        "name": "rangeDisplay",
        "parent": {
          "fileName": "welcome-ui/lib/src/components/Pagination/index.tsx",
          "name": "PaginationOptions"
        },
        "declarations": [
          {
            "fileName": "welcome-ui/lib/src/components/Pagination/index.tsx",
            "name": "PaginationOptions"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "number",
          "value": [
            {
              "value": "number"
            }
          ]
        }
      },
      "rightArrow": {
        "defaultValue": null,
        "description": "",
        "name": "rightArrow",
        "parent": {
          "fileName": "welcome-ui/lib/src/components/Pagination/index.tsx",
          "name": "PaginationOptions"
        },
        "declarations": [
          {
            "fileName": "welcome-ui/lib/src/components/Pagination/index.tsx",
            "name": "PaginationOptions"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "ReactElement<any, string | JSXElementConstructor<any>>",
          "value": [
            {
              "value": "ReactElement<any, string | JSXElementConstructor<any>>",
              "description": "Represents a JSX element.\n\nWhere {@link ReactNode} represents everything that can be rendered, `ReactElement`\nonly represents JSX.",
              "fullComment": "Represents a JSX element.\n\nWhere {@link ReactNode} represents everything that can be rendered, `ReactElement`\nonly represents JSX.\n@template P The type of the props object\n@template T The type of the component or tag\n@example ```tsx\nconst element: ReactElement = <div />;\n```",
              "tags": {
                "template": "P The type of the props object\nT The type of the component or tag",
                "example": "```tsx\nconst element: ReactElement = <div />;\n```"
              }
            }
          ]
        }
      }
    }
  }
}