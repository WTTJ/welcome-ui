@use '../../utils/theme/text-ellipsis.scss' as ellipsis;

@layer components {
  .wrapper {
    position: relative;
  }

  .indicators {
    position: absolute;
    padding: 0;
    top: 0;
    bottom: 0;
    right: var(--indicatorsRight, 0);
    display: flex;
    gap: var(--border-radius-sm);
  }

  .dropdown-indicator {
    position: relative;
    height: 100%;
    width: var(--searchClearSize);
    padding: 0;
    outline: none !important; /* important for firefox */
    appearance: none;
    cursor: pointer;
    background: transparent;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .input-wrapper {
    position: relative;

    &:has(> .icon-placement-right) {
      .indicators {
        --indicatorsRight: calc((var(--searchIconSize, 1rem) + var(--border-radius-md)));
      }
    }
  }

  .root {
    background-color: var(--searchBackgroundColor, var(--color-background-neutral-inverse-fixed));
    border-color: var(--searchBorderColor, var(--color-background-neutral-subtlest));
    border-radius: var(--border-radius-sm);
    border-style: solid;
    border-width: var(--border-width-xs);
    color: var(--searchTextColor, var(--color-background-neutral-primary-fixed));
    font-size: var(--font-size-14);
    font-weight: var(--font-weight-regular);
    line-height: var(--border-radius-xl);
    outline: 2px solid var(--searchOutlineColor, transparent);
    cursor: default;
    width: 100%;
    transition-property: all;
    transition-timing-function: var(--timing-primary);
    transition-duration: var(--duration-medium);
    appearance: none;
    @include ellipsis.text-ellipsis;

    height: var(--searchHeight);
    padding-bottom: var(--searchPaddingBottom);
    padding-left: var(--searchPaddingLeft);
    padding-right: var(--searchPaddingRight);
    padding-top: var(--searchPaddingTop);

    /* left icon */
    &.icon-placement-left {
      padding-left: calc(
        var(--searchPaddingLeft) + var(--searchIconSize, 1rem) + var(--border-radius-md)
      );
    }

    /*  right icon */
    &.icon-placement-right {
      padding-right: calc(
        var(--searchPaddingRight) + (var(--searchIconSize, 1rem) + var(--border-radius-md)) * 2
      );
    }

    &:disabled {
      --searchBackgroundColor: var(--color-background-warm-stronger);
      --searchTextColor: var(--color-text-warm-tertiary);
      cursor: not-allowed;
    }

    /* hover when no variant is defined */
    &:hover:not([class*='variant']) {
      --searchBorderColor: var(--color-background-brand-primary);
    }

    /* focus when no variant is defined */
    &:focus:not([class*='variant']) {
      --searchOutlineColor: var(--color-background-brand-subtle);
      --searchBorderColor: var(--color-background-brand-primary);
    }

    &.transparent {
      --searchBorderColor: transparent;
      --searchBackgroundColor: transparent;

      &:hover {
        --searchBorderColor: var(--color-background-neutral-minimal);
      }
    }

    &::placeholder {
      color: var(--color-icon-neutral-subtle);
    }

    br {
      display: none;
    }
  }

  .variant {
    &-danger {
      --searchBorderColor: var(--color-background-danger-strongest);
      --searchOutlineColor: var(--color-background-danger-secondary);
    }

    &-success {
      --searchBorderColor: var(--color-background-accent-green-strongest);
      --searchOutlineColor: var(--color-background-accent-green-primary);
    }

    &-warning {
      --searchBorderColor: var(--color-background-warning-stronger);
      --searchOutlineColor: var(--color-background-warning-subtle);
    }
  }

  .size {
    &-lg {
      --searchHeight: var(--size-icon-2xl);
      --searchClearSize: var(--searchHeight);
      --searchPaddingBottom: var(--border-radius-xl);
      --searchPaddingLeft: var(--border-radius-lg);
      --searchPaddingRight: var(--border-radius-lg);
      --searchPaddingTop: var(--border-radius-xl);
    }

    &-md {
      --searchHeight: var(--width-40);
      --searchClearSize: var(--searchHeight);
      --searchPaddingBottom: var(--border-radius-lg);
      --searchPaddingLeft: var(--border-radius-lg);
      --searchPaddingRight: var(--border-radius-lg);
      --searchPaddingTop: var(--border-radius-lg);
    }

    &-sm {
      --searchHeight: var(--size-icon-xl);
      --searchClearSize: var(--searchHeight);
      --searchPaddingBottom: var(--border-radius-md);
      --searchPaddingLeft: var(--border-radius-lg);
      --searchPaddingRight: var(--border-radius-lg);
      --searchPaddingTop: var(--border-radius-md);
    }

    &-xs {
      --searchHeight: var(--border-radius-2xl);
      --searchClearSize: var(--searchHeight);
      --searchPaddingBottom: var(--border-radius-sm);
      --searchPaddingLeft: var(--border-radius-md);
      --searchPaddingRight: var(--border-radius-md);
      --searchPaddingTop: var(--border-radius-sm);
      --searchIconSize: 0.75rem;
    }
  }

  .icon-wrapper {
    position: absolute;
    top: 0;
    left: var(--iconPlacementLeft, auto);
    right: var(--iconPlacementRight, auto);
    bottom: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    pointer-events: none;
    transition-property: all;
    transition-timing-function: var(--timing-primary);
    transition-duration: var(--duration-medium);
    color: var(--color-background-neutral-primary-fixed);

    &.icon-placement-left {
      --iconPlacementLeft: var(--border-radius-lg);
      &.size-xs {
        --iconPlacementLeft: var(--border-radius-md);
      }
    }

    &.icon-placement-right {
      --iconPlacementRight: var(--border-radius-lg);
      &.size-xs {
        --iconPlacementRight: var(--border-radius-md);
      }
    }

    /* for button action */
    & > button {
      pointer-events: auto;
    }
  }

  .menu {
    max-height: 9.6875rem; /* 155px */
    background-color: var(--color-background-neutral-inverse-fixed);
    border-color: var(--color-background-neutral-subtlest);
    border-radius: var(--border-radius-sm);
    border-style: solid;
    border-width: var(--border-width-xs);
    color: var(--color-background-neutral-primary-fixed);
    font-size: var(--font-size-14);
    font-weight: var(--font-weight-regular);
    line-height: var(--border-radius-xl);
    outline: none;
    position: absolute;
    z-index: 2;
    right: 0;
    left: 0;
    margin: 0;
    margin-top: var(--border-radius-lg);
    padding: 0;
    transition-property: all;
    transition-timing-function: var(--timing-primary);
    transition-duration: var(--duration-medium);
    overflow: auto;
    -webkit-overflow-scrolling: touch;

    &:hover > * {
      cursor: pointer;
    }
  }

  .item {
    color: var(--itemTextColor, var(--color-icon-warm-tertiary));
    cursor: var(--itemCursor, default);
    padding: var(--border-radius-lg);
    list-style: none;
    text-decoration: none;
    font-size: var(--font-size-14);
    transition-property: background;
    transition-duration: var(--duration-medium);
    transition-timing-function: var(--timing-primary);
    @include ellipsis.text-ellipsis;

    &.highlighted {
      background-color: var(--color-background-warm-primary);
    }

    &.selected {
      --itemTextColor: var(--color-background-neutral-primary-fixed);
      font-weight: var(--font-weight-semi-bold);
    }

    &.selected.highlighted {
      background-image: linear-gradient(0deg, rgba(0, 0, 0, 0.08), rgba(0, 0, 0, 0.08) 100%);
    }
  }
}
