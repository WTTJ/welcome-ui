{
  "RadioGroup": {
    "props": {
      "dataTestId": {
        "defaultValue": null,
        "description": "",
        "name": "dataTestId",
        "parent": {
          "fileName": "welcome-ui/lib/src/components/RadioGroup/types.ts",
          "name": "RadioGroupOptions"
        },
        "declarations": [
          {
            "fileName": "welcome-ui/lib/src/components/RadioGroup/types.ts",
            "name": "RadioGroupOptions"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "label": {
        "defaultValue": null,
        "description": "",
        "name": "label",
        "parent": {
          "fileName": "welcome-ui/lib/src/old/components/FieldGroup/index.tsx",
          "name": "FieldGroupOptions"
        },
        "declarations": [
          {
            "fileName": "welcome-ui/lib/src/old/components/FieldGroup/index.tsx",
            "name": "FieldGroupOptions"
          }
        ],
        "required": false,
        "type": {
          "name": "ReactElement<any, string | JSXElementConstructor<any>>"
        }
      },
      "name": {
        "defaultValue": null,
        "description": "",
        "name": "name",
        "parent": {
          "fileName": "welcome-ui/lib/src/components/RadioGroup/types.ts",
          "name": "RadioGroupOptions"
        },
        "declarations": [
          {
            "fileName": "welcome-ui/lib/src/components/RadioGroup/types.ts",
            "name": "RadioGroupOptions"
          }
        ],
        "required": true,
        "type": {
          "name": "string"
        }
      },
      "onChange": {
        "defaultValue": null,
        "description": "",
        "name": "onChange",
        "parent": {
          "fileName": "welcome-ui/node_modules/@types/react/index.d.ts",
          "name": "DOMAttributes"
        },
        "declarations": [
          {
            "fileName": "welcome-ui/node_modules/@types/react/index.d.ts",
            "name": "DOMAttributes"
          },
          {
            "fileName": "welcome-ui/lib/src/components/RadioGroup/types.ts",
            "name": "RadioGroupOptions"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "FormEventHandler<HTMLFieldSetElement> | ((value: string | number) => void)",
          "value": [
            {
              "value": "FormEventHandler<HTMLFieldSetElement>",
              "description": "",
              "fullComment": "",
              "tags": {}
            },
            {
              "value": "(value: string | number) => void",
              "description": "",
              "fullComment": "",
              "tags": {}
            }
          ]
        }
      },
      "options": {
        "defaultValue": {
          "value": "[]"
        },
        "description": "",
        "name": "options",
        "parent": {
          "fileName": "welcome-ui/lib/src/components/RadioGroup/types.ts",
          "name": "RadioGroupOptions"
        },
        "declarations": [
          {
            "fileName": "welcome-ui/lib/src/components/RadioGroup/types.ts",
            "name": "RadioGroupOptions"
          }
        ],
        "required": false,
        "type": {
          "name": "RadioGroupOption[]"
        }
      },
      "renderOption": {
        "defaultValue": {
          "value": "forwardRef<'input', RadioProps>(\n  (\n    {\n      dataTestId,\n      disabled,\n      disabledIcon,\n      flexDirection,\n      hint,\n      label,\n      maxWidth,\n      onChange,\n      onClick,\n      variant,\n      ...rest\n    },\n    ref\n  ) => {\n    const handleClick = (event: React.MouseEvent<HTMLLabelElement>) => {\n      event.stopPropagation()\n      onClick && onClick(event)\n      onChange && onChange(event)\n    }\n\n    return (\n      <S.Label\n        alignItems=\"flex-start\"\n        checkableField\n        disabled={disabled}\n        disabledIcon={disabledIcon}\n        flexDirection=\"column\"\n        maxWidth={maxWidth}\n        onClick={handleClick}\n        variant={variant}\n        withDisabledIcon={false}\n      >\n        <S.Wrapper flexDirection={flexDirection}>\n          <S.Input>\n            <S.Radio\n              data-testid={dataTestId}\n              disabled={disabled}\n              label={label}\n              ref={ref}\n              variant={variant}\n              {...rest}\n            />\n          </S.Input>\n          <S.LabelWithHint>\n            <div data-testid={dataTestId ? `${dataTestId}-label` : undefined}>{label}</div>\n            {hint ? (\n              <Hint data-testid={dataTestId ? `${dataTestId}-hint` : undefined} mt=\"0\">\n                {hint}\n              </Hint>\n            ) : null}\n          </S.LabelWithHint>\n        </S.Wrapper>\n      </S.Label>\n    )\n  }\n)"
        },
        "description": "",
        "name": "renderOption",
        "parent": {
          "fileName": "welcome-ui/lib/src/components/RadioGroup/types.ts",
          "name": "RadioGroupOptions"
        },
        "declarations": [
          {
            "fileName": "welcome-ui/lib/src/components/RadioGroup/types.ts",
            "name": "RadioGroupOptions"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "ElementType<any, keyof IntrinsicElements>",
          "value": [
            {
              "value": "\"symbol\""
            },
            {
              "value": "\"object\""
            },
            {
              "value": "\"label\""
            },
            {
              "value": "\"slot\""
            },
            {
              "value": "\"style\""
            },
            {
              "value": "\"title\""
            },
            {
              "value": "\"map\""
            },
            {
              "value": "\"filter\""
            },
            {
              "value": "\"a\""
            },
            {
              "value": "\"abbr\""
            },
            {
              "value": "\"address\""
            },
            {
              "value": "\"area\""
            },
            {
              "value": "\"article\""
            },
            {
              "value": "\"aside\""
            },
            {
              "value": "\"audio\""
            },
            {
              "value": "\"b\""
            },
            {
              "value": "\"base\""
            },
            {
              "value": "\"bdi\""
            },
            {
              "value": "\"bdo\""
            },
            {
              "value": "\"big\""
            },
            {
              "value": "\"blockquote\""
            },
            {
              "value": "\"body\""
            },
            {
              "value": "\"br\""
            },
            {
              "value": "\"button\""
            },
            {
              "value": "\"canvas\""
            },
            {
              "value": "\"caption\""
            },
            {
              "value": "\"center\""
            },
            {
              "value": "\"cite\""
            },
            {
              "value": "\"code\""
            },
            {
              "value": "\"col\""
            },
            {
              "value": "\"colgroup\""
            },
            {
              "value": "\"data\""
            },
            {
              "value": "\"datalist\""
            },
            {
              "value": "\"dd\""
            },
            {
              "value": "\"del\""
            },
            {
              "value": "\"details\""
            },
            {
              "value": "\"dfn\""
            },
            {
              "value": "\"dialog\""
            },
            {
              "value": "\"div\""
            },
            {
              "value": "\"dl\""
            },
            {
              "value": "\"dt\""
            },
            {
              "value": "\"em\""
            },
            {
              "value": "\"embed\""
            },
            {
              "value": "\"fieldset\""
            },
            {
              "value": "\"figcaption\""
            },
            {
              "value": "\"figure\""
            },
            {
              "value": "\"footer\""
            },
            {
              "value": "\"form\""
            },
            {
              "value": "\"h1\""
            },
            {
              "value": "\"h2\""
            },
            {
              "value": "\"h3\""
            },
            {
              "value": "\"h4\""
            },
            {
              "value": "\"h5\""
            },
            {
              "value": "\"h6\""
            },
            {
              "value": "\"head\""
            },
            {
              "value": "\"header\""
            },
            {
              "value": "\"hgroup\""
            },
            {
              "value": "\"hr\""
            },
            {
              "value": "\"html\""
            },
            {
              "value": "\"i\""
            },
            {
              "value": "\"iframe\""
            },
            {
              "value": "\"img\""
            },
            {
              "value": "\"input\""
            },
            {
              "value": "\"ins\""
            },
            {
              "value": "\"kbd\""
            },
            {
              "value": "\"keygen\""
            },
            {
              "value": "\"legend\""
            },
            {
              "value": "\"li\""
            },
            {
              "value": "\"link\""
            },
            {
              "value": "\"main\""
            },
            {
              "value": "\"mark\""
            },
            {
              "value": "\"menu\""
            },
            {
              "value": "\"menuitem\""
            },
            {
              "value": "\"meta\""
            },
            {
              "value": "\"meter\""
            },
            {
              "value": "\"nav\""
            },
            {
              "value": "\"noindex\""
            },
            {
              "value": "\"noscript\""
            },
            {
              "value": "\"ol\""
            },
            {
              "value": "\"optgroup\""
            },
            {
              "value": "\"option\""
            },
            {
              "value": "\"output\""
            },
            {
              "value": "\"p\""
            },
            {
              "value": "\"param\""
            },
            {
              "value": "\"picture\""
            },
            {
              "value": "\"pre\""
            },
            {
              "value": "\"progress\""
            },
            {
              "value": "\"q\""
            },
            {
              "value": "\"rp\""
            },
            {
              "value": "\"rt\""
            },
            {
              "value": "\"ruby\""
            },
            {
              "value": "\"s\""
            },
            {
              "value": "\"samp\""
            },
            {
              "value": "\"search\""
            },
            {
              "value": "\"script\""
            },
            {
              "value": "\"section\""
            },
            {
              "value": "\"select\""
            },
            {
              "value": "\"small\""
            },
            {
              "value": "\"source\""
            },
            {
              "value": "\"span\""
            },
            {
              "value": "\"strong\""
            },
            {
              "value": "\"sub\""
            },
            {
              "value": "\"summary\""
            },
            {
              "value": "\"sup\""
            },
            {
              "value": "\"table\""
            },
            {
              "value": "\"template\""
            },
            {
              "value": "\"tbody\""
            },
            {
              "value": "\"td\""
            },
            {
              "value": "\"textarea\""
            },
            {
              "value": "\"tfoot\""
            },
            {
              "value": "\"th\""
            },
            {
              "value": "\"thead\""
            },
            {
              "value": "\"time\""
            },
            {
              "value": "\"tr\""
            },
            {
              "value": "\"track\""
            },
            {
              "value": "\"u\""
            },
            {
              "value": "\"ul\""
            },
            {
              "value": "\"var\""
            },
            {
              "value": "\"video\""
            },
            {
              "value": "\"wbr\""
            },
            {
              "value": "\"webview\""
            },
            {
              "value": "\"svg\""
            },
            {
              "value": "\"animate\""
            },
            {
              "value": "\"animateMotion\""
            },
            {
              "value": "\"animateTransform\""
            },
            {
              "value": "\"circle\""
            },
            {
              "value": "\"clipPath\""
            },
            {
              "value": "\"defs\""
            },
            {
              "value": "\"desc\""
            },
            {
              "value": "\"ellipse\""
            },
            {
              "value": "\"feBlend\""
            },
            {
              "value": "\"feColorMatrix\""
            },
            {
              "value": "\"feComponentTransfer\""
            },
            {
              "value": "\"feComposite\""
            },
            {
              "value": "\"feConvolveMatrix\""
            },
            {
              "value": "\"feDiffuseLighting\""
            },
            {
              "value": "\"feDisplacementMap\""
            },
            {
              "value": "\"feDistantLight\""
            },
            {
              "value": "\"feDropShadow\""
            },
            {
              "value": "\"feFlood\""
            },
            {
              "value": "\"feFuncA\""
            },
            {
              "value": "\"feFuncB\""
            },
            {
              "value": "\"feFuncG\""
            },
            {
              "value": "\"feFuncR\""
            },
            {
              "value": "\"feGaussianBlur\""
            },
            {
              "value": "\"feImage\""
            },
            {
              "value": "\"feMerge\""
            },
            {
              "value": "\"feMergeNode\""
            },
            {
              "value": "\"feMorphology\""
            },
            {
              "value": "\"feOffset\""
            },
            {
              "value": "\"fePointLight\""
            },
            {
              "value": "\"feSpecularLighting\""
            },
            {
              "value": "\"feSpotLight\""
            },
            {
              "value": "\"feTile\""
            },
            {
              "value": "\"feTurbulence\""
            },
            {
              "value": "\"foreignObject\""
            },
            {
              "value": "\"g\""
            },
            {
              "value": "\"image\""
            },
            {
              "value": "\"line\""
            },
            {
              "value": "\"linearGradient\""
            },
            {
              "value": "\"marker\""
            },
            {
              "value": "\"mask\""
            },
            {
              "value": "\"metadata\""
            },
            {
              "value": "\"mpath\""
            },
            {
              "value": "\"path\""
            },
            {
              "value": "\"pattern\""
            },
            {
              "value": "\"polygon\""
            },
            {
              "value": "\"polyline\""
            },
            {
              "value": "\"radialGradient\""
            },
            {
              "value": "\"rect\""
            },
            {
              "value": "\"set\""
            },
            {
              "value": "\"stop\""
            },
            {
              "value": "\"switch\""
            },
            {
              "value": "\"text\""
            },
            {
              "value": "\"textPath\""
            },
            {
              "value": "\"tspan\""
            },
            {
              "value": "\"use\""
            },
            {
              "value": "\"view\""
            },
            {
              "value": "ComponentClass<any, any>",
              "description": "Represents a component class in React.",
              "fullComment": "Represents a component class in React.\n@template P The props the component accepts.\n@template S The internal state of the component.",
              "tags": {
                "template": "P The props the component accepts.\nS The internal state of the component."
              }
            },
            {
              "value": "FunctionComponent<any>",
              "description": "Represents the type of a function component. Can optionally\nreceive a type argument that represents the props the component\naccepts.",
              "fullComment": "Represents the type of a function component. Can optionally\nreceive a type argument that represents the props the component\naccepts.\n@template P The props the component accepts.\n@see {@link https://react-typescript-cheatsheet.netlify.app/docs/basic/getting-started/function_components React TypeScript Cheatsheet}\n@example ```tsx\n// With props:\ntype Props = { name: string }\n\nconst MyComponent: FunctionComponent<Props> = (props) => {\n return <div>{props.name}</div>\n}\n```\n@example ```tsx\n// Without props:\nconst MyComponentWithoutProps: FunctionComponent = () => {\n  return <div>MyComponentWithoutProps</div>\n}\n```",
              "tags": {
                "template": "P The props the component accepts.",
                "see": "{@link https://react-typescript-cheatsheet.netlify.app/docs/basic/getting-started/function_components React TypeScript Cheatsheet}",
                "example": "```tsx\n// With props:\ntype Props = { name: string }\n\nconst MyComponent: FunctionComponent<Props> = (props) => {\n return <div>{props.name}</div>\n}\n```\n```tsx\n// Without props:\nconst MyComponentWithoutProps: FunctionComponent = () => {\n  return <div>MyComponentWithoutProps</div>\n}\n```"
              }
            }
          ]
        }
      },
      "required": {
        "defaultValue": null,
        "description": "",
        "name": "required",
        "parent": {
          "fileName": "welcome-ui/lib/src/old/components/FieldGroup/index.tsx",
          "name": "FieldGroupOptions"
        },
        "declarations": [
          {
            "fileName": "welcome-ui/lib/src/old/components/FieldGroup/index.tsx",
            "name": "FieldGroupOptions"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "boolean",
          "value": [
            {
              "value": "false"
            },
            {
              "value": "true"
            }
          ]
        }
      },
      "value": {
        "defaultValue": null,
        "description": "",
        "name": "value",
        "parent": {
          "fileName": "welcome-ui/lib/src/components/RadioGroup/types.ts",
          "name": "RadioGroupOptions"
        },
        "declarations": [
          {
            "fileName": "welcome-ui/lib/src/components/RadioGroup/types.ts",
            "name": "RadioGroupOptions"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      }
    }
  }
}