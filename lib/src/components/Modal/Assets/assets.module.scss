@use '../../../utils/theme/breakpoints' as breakpoints;

@mixin sizeOfElements {
  width: var(--contentWidthMobile);
  max-height: var(--contentHeight);

  @media (min-width: breakpoints.$breakpoint-md) {
    width: var(--contentWidthDesktop);
  }

  /* for big screens */
  @media (min-width: breakpoints.$breakpoint-3xl) {
    max-width: 1600px;
  }
}

@layer components {
  .root {
    --contentWidthMobile: calc(100vw - 2 * 1rem);
    --contentHeight: calc(100vh - 2 * 5rem);
    --contentWidthDesktop: calc(100vw - 2 * 2rem);
  }

  .asset-backdrop {
    background-color: color-mix(in oklab, var(--color-background-neutral-primary-fixed) 90%, transparent);
    z-index: 999;
    position: fixed;
    top: 0;
    right: 0;
    left: 0;
    bottom: 0;
    opacity: 0;
    transition: opacity 150ms ease-in-out;

    &.hideOnInteractOutside {
      cursor: pointer;
    }

    &[data-enter] {
      opacity: 1;
    }
  }

  .iframe-wrapper {
    height: 100%;
    margin: auto 0;
    flex: 1;
    aspect-ratio: 16 / 9;

    iframe {
      width: 100%;
      height: 100%;
    }

    @include sizeOfElements;
  }

  .asset-wrapper {
    --titleBlockMobile: 4rem;
    --titleBlockDesktop: 6rem;

    display: flex;
    flex-direction: column;
    border-radius: var(--size-icon-2xl);
    overflow: hidden;

    .asset-title-wrapper {
      background-color: var(--color-background-neutral-inverse-fixed);
      display: flex;
      flex-direction: column;
      justify-content: center;
      flex-shrink: 0;
      gap: var(--border-radius-xs);
      width: 100%;
      height: var(--titleBlockMobile);
      padding-inline: var(--border-radius-lg);

      @media (min-width: breakpoints.$breakpoint-md) {
        height: var(--titleBlockDesktop);
        padding-inline: var(--border-radius-2xl);
      }
    }

    > img {
      width: auto;
      max-width: fit-content;
      max-height: calc(100vh - 2 * 5rem - var(--titleBlockMobile));
      flex-shrink: 0;

      @media (min-width: breakpoints.$breakpoint-md) {
        max-height: calc(100vh - 2 * 5rem - var(--titleBlockDesktop));
      }
    }

    .iframe-wrapper {
      background-color: var(--color-background-neutral-primary-fixed);
      max-height: calc(100vh - 2 * 5rem - var(--titleBlockMobile));

      @media (min-width: breakpoints.$breakpoint-md) {
        max-height: calc(100vh - 2 * 5rem - var(--titleBlockDesktop));
      }
    }
  }

  .asset-title {
    margin: var(--font-letter-spacing-none);
  }

  .asset-content {
    transition: margin-top 250ms ease-in-out;

    > img,
    > div {
      max-width: var(--contentWidthMobile);
      max-height: var(--contentHeight);

      @media (min-width: breakpoints.$breakpoint-md) {
        max-width: var(--contentWidthDesktop);
      }

      /* for big screens */
      @media (min-width: breakpoints.$breakpoint-3xl) {
        max-width: 1600px;
      }
    }
  }

  .dialog {
    position: fixed;
    z-index: 999;
    inset: 0;
    margin: auto;
    display: flex;
    height: fit-content;
    width: fit-content;
    flex-direction: column;
    border-radius: var(--border-radius-sm);
    opacity: 0;
    transition: opacity 250ms ease-in-out;

    /* TODO migrate after WUI-189/swiper */
    /* &:has(${StyledSwiper}) {
      @include sizeOfElements;
    } */
    /* temporary workaround: select any ul that has at least on li with id containing "swiper" */
    ul:has(> [id*='swiper']) {
      @include sizeOfElements;
    }

    .asset-content {
      margin-top: var(--border-radius-2xl);
    }

    &[data-enter] {
      opacity: 1;

      .asset-content {
        margin-top: 0;
      }
    }
  }

  .close-button {
    position: absolute;
    right: var(--border-radius-2xl);
    top: var(--border-radius-2xl);

    /* Hack for secondary variant on dark mode */
    /* FIXME(isaac) this hack was already there, don't know what it does */
    color: var(--color-background-neutral-primary-fixed);
    border-color: var(--color-background-neutral-inverse-fixed);
    background-color: var(--color-background-neutral-inverse-fixed);

    &:hover {
      background-color: var(--color-background-neutral-subtle);
    }
  }
}
