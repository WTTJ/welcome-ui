@use 'sass:map';

.root {
  /* tailwind classic classes that don't need tokens from theme */
  @apply relative
    transition-all
    outline-transparent
    overflow-hidden
    whitespace-nowrap
    text-ellipsis;

  /* tailwind generic classes that need tokens from theme BUT don't depend on react props */
  @apply border-(length:--border-width-sm)
    duration-(--duration-medium)
    font-(--font-weight-bold)
    outline-(length:--border-width-md);

  /* tailwind generic classes that need tokens from theme AND depend on react props */
  @apply bg-(--backgroundColor)
    active:bg-(--backgroundColorActive)
    aspect-(--aspectRatio)
    hover:bg-(--backgroundColorHover)
    disabled:bg-(--backgroundColorDisabled)
    aria-disabled:bg-(--backgroundColorDisabled)
    border-(--borderColor)
    active:border-(--borderColorActive)
    hover:border-(--borderColorHover)
    disabled:border-(--borderColorDisabled)
    aria-disabled:border-(--borderColorDisabled)
    focus:outline-(--outlineColorFocus)
    w-(--width)
    h-(--height)
    px-(--paddingInline)
    rounded-(--borderRadius)
    text-(length:--fontSize)
    text-(color:--color)
    disabled:text-(color:--colorDisabled)
    aria-disabled:text-(color:--colorDisabled)
    cursor-(--cursor)
    [&:has(i[data-wui-icon-font])]:px-(--paddingInlineHasIcon)
    [&:has(svg[data-wui-icon])]:px-(--paddingInlineHasIcon);

  /* values placed inside .root class avoid repetitions in react props classes */
  --cursor: pointer;

  i[data-wui-icon-font],
  svg[data-wui-icon] {
    display: inline-block;

    &:first-child:not(:only-child) {
      margin-inline-end: var(--spacing-xs);
    }

    &:last-child:not(:only-child) {
      margin-inline-start: var(--spacing-xs);
    }
  }

  /* This is a workaround because the hover peudo state is not compatible with Tailwind 4 */
  /* https://github.com/storybookjs/storybook-addon-pseudo-states/issues/140 */
  &.pseudo-hover {
    background-color: var(--backgroundColorHover);
    border-color: var(--borderColorHover);
  }
}

.shape {
  &-default {
    --borderRadius: var(--radius-md);
  }

  &-circle {
    --borderRadius: 100%;
  }

  &-square {
    --borderRadius: var(--radius-md);
  }
}

.size {
  &-lg {
    --fontSize: var(--font-size-text-sm);
    --height: var(--height-button-lg);
    --paddingInline: var(--spacing-xl);
    --paddingInlineHasIcon: var(--spacing-lg);

    &.shape-circle,
    &.shape-square {
      --fontSize: var(--font-size-button-icon-lg);
    }
  }

  &-md {
    --fontSize: var(--font-size-text-sm);
    --height: var(--height-button-md);
    --paddingInline: var(--spacing-xl);
    --paddingInlineHasIcon: var(--spacing-md);

    &.shape-circle,
    &.shape-square {
      --fontSize: var(--font-size-button-icon-md);
    }
  }

  &-sm {
    --fontSize: var(--font-size-text-xs);
    --height: var(--height-button-sm);
    --paddingInline: var(--spacing-sm);
    --paddingInlineHasIcon: var(--spacing-md);

    &.shape-circle,
    &.shape-square {
      --fontSize: var(--font-size-button-icon-sm);
    }
  }

  &-xs {
    --fontSize: var(--font-size-text-xs);
    --height: var(--height-button-xs);
    --paddingInline: var(--spacing-sm);
    --paddingInlineHasIcon: var(--spacing-sm);

    &.shape-circle,
    &.shape-square {
      --fontSize: var(--font-size-button-icon-xs);
    }
  }

  /* compounded variant equivalent for shape + size */
  &-lg,
  &-md,
  &-sm,
  &-xs {
    &.shape-circle,
    &.shape-square {
      --aspectRatio: 1;
      --paddingInline: 0;
      --paddingInlineHasIcon: 0;
    }
  }
}

.variant {
  &-disabled {
    --backgroundColorDisabled: var(--color-beige-40);
    --borderColorDisabled: var(--color-beige-40);
    --colorDisabled: var(--color-beige-70);
    --cursor: not-allowed;
    --outlineColorFocus: var(--color-beige-10);
  }

  &-ghost {
    --backgroundColorActive: color-mix(in oklab, var(--color-neutral-90) 40%, transparent);
    --backgroundColorHover: color-mix(in oklab, var(--color-neutral-90) 10%, transparent);
    --borderColor: transparent;
    --borderColorActive: transparent;
    --borderColorHover: transparent;
    --outlineColorFocus: color-mix(in oklab, var(--color-neutral-90) 10%, transparent);
  }

  &-ghost-ai {
    --backgroundColorActive: var(--color-violet-30);
    --backgroundColorHover: var(--color-violet-10);
    --borderColor: transparent;
    --borderColorActive: var(--color-violet-30);
    --borderColorHover: var(--color-violet-10);
    --color: var(--color-violet-70);
    --outlineColorFocus: var(--color-violet-50);
  }

  &-ghost-danger {
    --backgroundColorActive: var(--color-red-20);
    --backgroundColorHover: var(--color-red-10);
    --borderColor: transparent;
    --borderColorActive: var(--color-red-20);
    --borderColorHover: var(--color-red-10);
    --color: var(--color-red-80);
    --outlineColorFocus: var(--color-red-40);
  }

  &-primary {
    --backgroundColor: var(--color-brand-40);
    --backgroundColorActive: var(--color-brand-10);
    --backgroundColorHover: var(--color-brand-30);
    --borderColor: var(--color-brand-40);
    --borderColorActive: var(--color-brand-10);
    --borderColorHover: var(--color-brand-30);
    --outlineColorFocus: var(--color-brand-20);
  }

  &-primary-ai {
    --backgroundColor: var(--color-violet-70);
    --backgroundColorActive: var(--color-violet-40);
    --backgroundColorHover: var(--color-violet-60);
    --borderColor: var(--color-violet-70);
    --borderColorActive: var(--color-violet-40);
    --borderColorHover: var(--color-violet-60);
    --color: var(--color-neutral-10);
    --outlineColorFocus: var(--color-violet-50);
  }

  &-primary-danger {
    --backgroundColor: var(--color-red-70);
    --backgroundColorActive: var(--color-red-50);
    --backgroundColorHover: var(--color-red-60);
    --borderColor: var(--color-red-70);
    --borderColorActive: var(--color-red-50);
    --borderColorHover: var(--color-red-60);
    --color: var(--color-neutral-10);
    --outlineColorFocus: var(--color-red-40);
  }

  &-secondary {
    --backgroundColor: var(--color-neutral-90);
    --backgroundColorActive: var(--color-neutral-50);
    --backgroundColorHover: var(--color-neutral-70);
    --borderColor: var(--color-neutral-90);
    --borderColorActive: var(--color-neutral-50);
    --borderColorHover: var(--color-neutral-70);
    --color: var(--color-neutral-10);
    --outlineColorFocus: var(--color-neutral-40);
  }

  &-tertiary {
    --backgroundColor: var(--color-neutral-10);
    --backgroundColorActive: color-mix(in oklab, var(--color-neutral-90) 40%, transparent);
    --backgroundColorHover: color-mix(in oklab, var(--color-neutral-90) 10%, transparent);
    --borderColor: var(--color-neutral-90);
    --outlineColorFocus: var(--color-neutral-40);
  }

  &-tertiary-ai {
    --backgroundColor: var(--color-neutral-10);
    --backgroundColorActive: var(--color-violet-30);
    --backgroundColorHover: var(--color-violet-10);
    --borderColor: var(--color-violet-70);
    --color: var(--color-violet-70);
    --outlineColorFocus: var(--color-violet-50);
  }

  &-tertiary-danger {
    --backgroundColor: var(--color-neutral-10);
    --backgroundColorActive: var(--color-red-20);
    --backgroundColorHover: var(--color-red-10);
    --borderColor: var(--color-red-80);
    --color: var(--color-red-80);
    --outlineColorFocus: var(--color-red-40);
  }
}
